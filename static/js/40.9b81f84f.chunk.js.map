{"version":3,"sources":["Validasi/ValidasiMasterKategori.jsx","pages/DataMaster/DataKategori/FormModalDataKategori.jsx","../node_modules/reactstrap/es/ModalFooter.js"],"names":["ValidasiMasterKategori","value","event","errors","kode","nama_kategori","harga_pergram","presentase","kadar","FormModalKategori","state","_this2","this","react_default","a","createElement","Modal","backdrop","keyboard","isOpen","props","toggle","dispatch","hideModal","ModalHeader","title","onSubmit","handleSubmit","autoComplete","ModalBody","Field","name","component","ReanderField","type","label","placeholder","readOnly","isEdit","normalize","Gramasi","NumberOnly","ModalFooter","className","onClick","disabled","isLoading","submitting","Fragment","Component","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowtModalKategori","initialValues","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","tag","string","cssModule","object","Tag","attributes","Object","classes","defaultProps","__webpack_exports__"],"mappings":"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","file":"static/js/40.9b81f84f.chunk.js","sourcesContent":["const ValidasiMasterKategori = (value,event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.kode) {\r\n        errors.kode = \"Kode Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.nama_kategori) {\r\n        errors.nama_kategori = \"Nama Kategori Tidak Boleh Kosong\";\r\n    }\r\n    \r\n    if (!value.harga_pergram) {\r\n        errors.harga_pergram = \"Harga / Gram Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.presentase) {\r\n        errors.presentase = \"Presentase Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.kadar) {\r\n        errors.kadar = \"Kadar Tidak Boleh Kosong\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiMasterKategori;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\nimport { ReanderField } from \"../../../components/helpers/field\";\r\nimport { Gramasi, NumberOnly } from \"../../../Validasi/normalize.jsx\";\r\nimport ValidasiMasterKategori from \"../../../Validasi/ValidasiMasterKategori.jsx\";\r\n// import Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowtModalKategori !== null) {\r\n    return {\r\n      initialValues: {\r\n        kode: state.datamaster.ShowtModalKategori.kode,\r\n        nama_kategori: state.datamaster.ShowtModalKategori.nama_kategori,\r\n        harga_pergram: state.datamaster.ShowtModalKategori.harga_pergram,\r\n        presentase: state.datamaster.ShowtModalKategori.presentase,\r\n        kadar: state.datamaster.ShowtModalKategori.kadar,\r\n      },\r\n    };\r\n  }\r\n};\r\nclass FormModalKategori extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Modal\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        isOpen={this.props.isOpen}\r\n        toggle={() => this.props.dispatch(hideModal())}\r\n      >\r\n        <ModalHeader> {this.props.title} </ModalHeader>\r\n        <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n          <ModalBody>\r\n            <Field\r\n              name=\"kode\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Kode\"\r\n              placeholder=\"Masukan Kode\"\r\n              readOnly={this.props.isEdit}\r\n            />\r\n            <Field\r\n              name=\"nama_kategori\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nama Kategori\"\r\n              placeholder=\"Masukan Nama Kategori\"\r\n            />\r\n            <Field\r\n              name=\"harga_pergram\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Harga / Gram\"\r\n              placeholder=\"Masukan Harga / Gram\"\r\n              normalize={Gramasi}\r\n            />\r\n            <Field\r\n              name=\"presentase\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Presentase\"\r\n              placeholder=\"Masukan Presentase\"\r\n              normalize={NumberOnly}\r\n            />\r\n            <Field\r\n              name=\"kadar\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Kadar\"\r\n              placeholder=\"Masukan Kadar\"\r\n            />\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </ModalFooter>\r\n           {/* {/* {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n        </form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalKategori = reduxForm({\r\n  form: \"ModalKategori\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterKategori,\r\n})(FormModalKategori);\r\nexport default connect(maptostate, null)(FormModalKategori);\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar ModalFooter = function ModalFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nModalFooter.propTypes = propTypes;\nModalFooter.defaultProps = defaultProps;\nexport default ModalFooter;"],"sourceRoot":""}