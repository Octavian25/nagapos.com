{"version":3,"sources":["pages/Laporan/LaporanService/LaporanTransaksiService/pdf/ExportLaporanService.jsx","pages/Laporan/LaporanService/LaporanTransaksiService/HeadFormLaporanService.jsx"],"names":["ExportLaporanService","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","tbl_barang","finalY","total_baraang","total_berat","total_jumlah","total_ongkos","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","content","styles","halign","forEach","item","index","no_services","_id","no_faktur_service","colSpan","push","detail","rows","tgl_system","kode_sales","nama_customer","no_hp","alamat_customer","kode_gudang","total","toLocaleString","detail_barang","fillColor","textColor","parseInt","ongkos","jumlah","berat","brg","nama_barang","toFixed","deskripsi","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","PrintPenjualan","postMessage","HeadFormLaporanService","props","_this","Object","classCallCheck","this","_super","call","state","date","Date","setStartDate","bind","assertThisInitialized","setLastDate","LaporanServices","setState","_this2","total_service","databarang","barang","columns","dataField","footerAttrs","footer","cell","row","num","react_default","a","createElement","headerClasses","className","formatter","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","onFocus","setTimeout","HideKeyboard","value","isLoading","Fragment","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","Component","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem"],"mappings":"mOAsVeA,UA3Uc,WAKxB,IAMCC,EAVJC,EAIGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAJI,GAMDG,GAFHH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAAA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAAA,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAES,IAAII,UAAM,IAAK,KAAM,CAAC,IAAK,OAEnCC,EAAY,GAGZC,EAAa,GACbC,EAAS,GACTC,EAAgB,EAChBC,EAAc,EACdC,EAAe,EACfC,EAAe,EAEnBR,EAAIS,YAAY,IAChBT,EAAIU,KAAK,mBAAoB,GAAI,IACjCV,EAAIS,YAAY,IAChBT,EAAIU,KAAKC,cAAcC,UAAW,IAAK,IACvCZ,EAAIS,YAAY,GAChB,IAAII,EAAaF,cAAcG,YAAYhB,OACvCe,EAAa,IACfb,EAAIU,KAAKC,cAAcG,YAAYC,MAAM,EAAE,IAAK,IAAK,IAEnDF,EAAa,IACfb,EAAIU,KAAKC,cAAcG,YAAYC,MAAM,GAAG,IAAK,IAAK,IAExDf,EAAIS,YAAY,IAChBT,EAAIgB,cAAc,CAChBC,MAAO,qBAGTjB,EAAIU,KAAJ,aAAAQ,OAEiD,IAA7CC,YAAmB,eAAerB,OAC9B,KACAsB,KAAKC,MAAMF,YAAmB,gBAAgBG,SAC9C,QACAF,KAAKC,MAAMF,YAAmB,gBAAgBI,WAEpD,GACA,IAEF5B,EAAc,CACZ,CACE,CACE6B,QAAO,qBAKT,CACEA,QAAO,cAET,CACEA,QAAO,iBAET,CACEA,QAAO,SAET,CACEA,QAAO,mBAET,CACEA,QAAO,eAET,CACEA,QAAO,gBACPC,OAAQ,CACNC,OAAQ,YAKhB9B,EAAK+B,QAAQ,SAACC,EAAMC,GAClB,IAAIC,EAAc,CAChB,CACEN,QAAO,iBAAAN,OAAmBU,EAAKG,IAAIC,kBAA5B,KACPC,QAAS,IAIb/B,EAAUgC,KAAKJ,GAafF,EAAKO,OAAOR,QAAQ,SAACQ,EAAQN,GAC3B,IAAIO,EAAO,CACTD,EAAOE,WAEPF,EAAOG,WACPH,EAAOI,cACPJ,EAAOK,MACPL,EAAOM,gBACPN,EAAOO,YACP,CACElB,QAAUW,EAAOQ,MAAMC,eAAe,SACtCnB,OAAQ,CACNC,OAAQ,WAIdxB,EAAUgC,KAAKE,GACfD,EAAOU,cAAclB,QAAQ,SAACkB,EAAehB,GAC3C1B,EAAa,CACX,CACEqB,QAAO,gBACPS,QAAS,EACTR,OAAQ,CACNC,OAAQ,YAMdxB,EAAUgC,KAAK/B,GAyCfD,EAAUgC,KAvCI,CACZ,CACEV,QAAO,cACPS,QAAS,EACTR,OAAQ,CACNqB,UAAW,UACXC,UAAW,SAGf,CACEvB,QAAO,QACPC,OAAQ,CACNqB,UAAW,UACXC,UAAW,SAGf,CACEvB,QAAO,SACPC,OAAQ,CACNqB,UAAW,UACXC,UAAW,SAGf,CACEvB,QAAO,SACPC,OAAQ,CACNqB,UAAW,UACXC,UAAW,SAGf,CACEvB,QAAO,YACPS,QAAS,EACTR,OAAQ,CACNqB,UAAW,UACXC,UAAW,WAKjBvC,GAEEwC,SAASH,EAAcI,QAAUD,SAASH,EAAcK,QAC1D3C,GAA8BsC,EAAcK,OAC5C5C,GAA4BuC,EAAcM,MAC1C,IAAIC,EAAM,CACR,CACE5B,QAASqB,EAAcQ,YACvBpB,QAAS,GAEXY,EAAcM,MAAMG,QAAQ,GAC5BT,EAAcK,QAEZF,SAASH,EAAcI,QAAUD,SAASH,EAAcK,SACxDN,eAAe,SACjB,CACEpB,QAASqB,EAAcU,UACvBtB,QAAS,IAGb/B,EAAUgC,KAAKkB,KA6BjB/C,GAAgC8B,EAAOU,cAAc/C,WASzD,IAAI0D,EAAU,CACZ,CACEhC,QAAO,cAAAN,OAAgBE,KAAKC,MAAMF,YAAmB,aAAasC,QAA3D,OAAAvC,OAAwEwC,eAC/EzB,QAAS,EACTR,OAAQ,CAENkC,UAAW,SACXZ,UAAW,UAKjB7C,EAAUgC,KAAKsB,GAEfxD,EAAI4D,UAAU,CACZC,KAAMlE,EACNmE,KAAM5D,EAEN6D,OAAQ3D,EACR4D,MAAO,QACPC,aAAc,QAEdC,OAAQ,CAAEC,IAAK,IACfC,WAAY,CAGVC,SAAU,GAEZC,WAAY,CAGVD,SAAU,GAEZE,WAAY,CACVF,SAAU,EAGVvB,UAAW,UACXC,UAAW,QAEbyB,eAAgB,CAAC,IAAK,IAAK,KAC3BC,eAAgB,IAElBrE,EAASJ,EAAI0E,mBAAqB,EAClCxE,EAAY,GAOZF,EAAIU,KAAJ,mCAAAQ,OAEIE,KAAKC,MAAMF,YAAmB,aAAasC,SAE7C,GACArD,EAAS,IAEXJ,EAAIU,KAAJ,kCAAAQ,OAA2CwC,eAAc,GAAItD,EAAS,IACtEJ,EAAIU,KAAJ,gCAAAQ,OACkCZ,EAAYgD,QAAQ,IACpD,GACAlD,EAAS,IAEXJ,EAAIU,KAAJ,8BAAAQ,OAAuCX,GAAgB,GAAIH,EAAS,IACpEJ,EAAIU,KAAJ,6BAAAQ,OAC+B8B,SAASxC,GAAcoC,eAClD,UAEF,GACAxC,EAAS,IAEXJ,EAAIU,KAAJ,8BAAAQ,OAAuCb,GAAiB,GAAID,EAAS,IACrE,IAAMuE,EAAQ3E,EAAI4E,SAASC,mBACrBC,EAAY9E,EAAI4E,SAASG,SAASC,MAClCC,EAAajF,EAAI4E,SAASG,SAASG,OACzClF,EAAIS,YAAY,IAChB,IAAK,IAAI0E,EAAI,EAAGA,EAAIR,EAAQ,EAAGQ,IAAK,CAClC,IAAIC,EAAgBN,EAAY,EAC5BO,EAAcJ,EAAa,GAC/BjF,EAAIsF,QAAQH,GACZnF,EAAIU,KAAJ,GAAAQ,OAAYiE,EAAZ,QAAAjE,OAAoByD,GAASS,EAAeC,EAAa,CACvDE,MAAO,WAKX,IAAIC,EAASxF,EAAIyF,OAAO,iBACxBC,eAAeC,YAAYH,KC3TvBI,oDACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXC,KAAM,IAAIC,MAEZR,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKY,YAAcZ,EAAKY,YAAYF,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IANFA,0DAUjBpG,EAAqBuG,KAAKJ,MAAMc,sDAErBN,GACXJ,KAAKW,SAAS,CACZtF,SAAU,IAAIgF,KAAKD,yCAGXA,GACVJ,KAAKW,SAAS,CACZrF,UAAW,IAAI+E,KAAKD,sCAIf,IAAAQ,EAAAZ,KAIHa,EAAgB,EAChBC,EAAa,GACjBd,KAAKJ,MAAMc,gBAAgBhF,QAAQ,SAACqF,EAAQnF,GAC1CmF,EAAO7E,OAAOR,QAAQ,SAACC,EAAMC,GAC3BkF,EAAW7E,KAAKN,GAIdkF,GAAgClF,EAAKe,UAM3C,IAAMsE,EAAU,CACd,CACEC,UAAW,oBACXxG,KAAM,YACNyG,YAAa,CACXlF,QAAS,KAEXmF,OAAQ,SAACC,EAAMC,EAAKC,EAAK1F,GACvB,OAAO2F,EAAAC,EAAAC,cAAA,+BAAuBX,EAAWjH,OAAlC,OAGX,CACEoH,UAAW,aACXxG,KAAM,iBASR,CACEwG,UAAW,aACXxG,KAAM,cAER,CACEwG,UAAW,gBACXxG,KAAM,iBAER,CACEwG,UAAW,QACXxG,KAAM,SAER,CACEwG,UAAW,kBACXxG,KAAM,mBAER,CACEwG,UAAW,cACXxG,KAAM,eAER,CACEwG,UAAW,QACXxG,KAAM,gBACNiH,cAAe,aACfP,OAAQ,SAACC,EAAMC,EAAKC,EAAK1F,GACvB,OAAO2F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcd,EAAclE,eAAe,SAA1D,MAETiF,UAAW,SAACR,GACV,OAAOG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcP,EAAKzE,eAAe,aAI9D,OACE4E,EAAAC,EAAAC,cAAA,QAAMI,SAAU7B,KAAKJ,MAAMkC,aAAcC,aAAa,OACpDR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,KAAK,WACLC,UAAWC,IACXC,MAAM,eACNC,KAAK,OACLC,SAAUtC,KAAKG,MAAM9E,SACrBkH,SAAU,SAACnC,GAAD,OAAUQ,EAAKN,aAAaF,IACtCoC,YAAY,uBACZC,QAAS,kBAAMC,WAAW,WACxBC,aAAajD,YAAY,KACxB,SAIP6B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,KAAK,YACLC,UAAWC,IACXE,KAAK,OACLC,SAAUtC,KAAKG,MAAM7E,UACrBiH,SAAU,SAACnC,GAAD,OAAUQ,EAAKH,YAAYL,IACrCgC,MAAM,gBACNI,YAAY,wBACZC,QAAS,kBAAMC,WAAW,WACxBC,aAAajD,YAAY,KACxB,SAIP6B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACEY,KAAK,SACLO,MAAM,MACNX,KAAK,WACLN,UAAU,6BAET3B,KAAKJ,MAAMiD,UACVtB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsB,SAAA,KACEvB,EAAAC,EAAAC,cAAA,KAAGE,UAAU,2BADf,wBAKA,kBAKRJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CACEC,SAAS,QACTrJ,KAAMqG,KAAKJ,MAAMqD,OAASnC,EAAa,GACvCE,QAASA,EACTkC,OAAO,EACPC,UAAU,2CAGd5B,EAAAC,EAAAC,cAAA,OAAKE,UAAW3B,KAAKJ,MAAMqD,OAAS,YAAc,oBAEhD1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,UACE2B,QAAS,kBAAMxC,EAAKyC,aACpB1B,UAAU,6BAET,IAJH,aAKa,iBAvKQ2B,aA2LrC3D,EAAyB4D,YAAU,CACjCC,KAAM,yBACNC,oBAAoB,EACpBC,SAAUC,KAHaJ,CAItB5D,GAEYiE,sBAAQ,SAACzD,GACtB,MAAO,CACL0D,cAAe,CACbxI,SAAUyI,cACVxI,UAAWwI,iBAJFF,CAOZjE","file":"static/js/108.89100993.chunk.js","sourcesContent":["/* eslint-disable no-undef */\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst ExportLaporanService = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let tbl_barang = [];\r\n  let finalY = 30;\r\n  let total_baraang = 0;\r\n  let total_berat = 0;\r\n  let total_jumlah = 0;\r\n  let total_ongkos = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN SERVICES\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN SERVICES\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `TANGGAL TRANSAKSI`,\r\n      },\r\n      // {\r\n      //   content: `TANGGAL SELESAI`,\r\n      // },\r\n      {\r\n        content: `KODE SALES`,\r\n      },\r\n      {\r\n        content: `NAMA CUSTOMER`,\r\n      },\r\n      {\r\n        content: `NO HP`,\r\n      },\r\n      {\r\n        content: `ALAMAT CUSTOMER`,\r\n      },\r\n      {\r\n        content: `KODE GUDANG`,\r\n      },\r\n      {\r\n        content: `Total Service`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  data.forEach((item, index) => {\r\n    let no_services = [\r\n      {\r\n        content: `No Services : ${item._id.no_faktur_service} `,\r\n        colSpan: 7,\r\n      },\r\n    ];\r\n\r\n    tableRows.push(no_services);\r\n    // item._id.pembayaran.forEach((header_detail, index) => {\r\n      // console.log(item._id.pembayaran[0].jenis);\r\n      // let no_services = [\r\n      //   {\r\n      //     content: `No Services : ${item._id.no_faktur_service} `,\r\n      //     colSpan: 7,\r\n      //   },\r\n      // ];\r\n\r\n      // tableRows.push(no_services);\r\n    // });\r\n\r\n    item.detail.forEach((detail, index) => {\r\n      let rows = [\r\n        detail.tgl_system,\r\n        // detail.tgl_selesai,\r\n        detail.kode_sales,\r\n        detail.nama_customer,\r\n        detail.no_hp,\r\n        detail.alamat_customer,\r\n        detail.kode_gudang,\r\n        {\r\n          content : detail.total.toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right'\r\n          }\r\n        }\r\n      ];\r\n      tableRows.push(rows);\r\n      detail.detail_barang.forEach((detail_barang, index) => {\r\n        tbl_barang = [\r\n          {\r\n            content: `Detail Barang`,\r\n            colSpan: 7,\r\n            styles: {\r\n              halign: \"center\",\r\n              // fillColor: \"#E8E5E5\",\r\n              // textColor: \"#000\",\r\n            },\r\n          },\r\n        ];\r\n        tableRows.push(tbl_barang);\r\n\r\n        let tbLhead = [\r\n          {\r\n            content: `Nama Barang`,\r\n            colSpan: 2,\r\n            styles: {\r\n              fillColor: \"#E8E5E5\",\r\n              textColor: \"#000\",\r\n            },\r\n          },\r\n          {\r\n            content: `BERAT`,\r\n            styles: {\r\n              fillColor: \"#E8E5E5\",\r\n              textColor: \"#000\",\r\n            },\r\n          },\r\n          {\r\n            content: `JUMLAH`,\r\n            styles: {\r\n              fillColor: \"#E8E5E5\",\r\n              textColor: \"#000\",\r\n            },\r\n          },\r\n          {\r\n            content: `Ongkos`,\r\n            styles: {\r\n              fillColor: \"#E8E5E5\",\r\n              textColor: \"#000\",\r\n            },\r\n          },\r\n          {\r\n            content: `Deskripsi`,\r\n            colSpan: 3,\r\n            styles: {\r\n              fillColor: \"#E8E5E5\",\r\n              textColor: \"#000\",\r\n            },\r\n          },\r\n        ];\r\n        tableRows.push(tbLhead);\r\n        total_ongkos =\r\n          total_ongkos +\r\n          parseInt(detail_barang.ongkos) * parseInt(detail_barang.jumlah);\r\n        total_jumlah = total_jumlah + detail_barang.jumlah;\r\n        total_berat = total_berat + detail_barang.berat;\r\n        let brg = [\r\n          {\r\n            content: detail_barang.nama_barang,\r\n            colSpan: 2,\r\n          },\r\n          detail_barang.berat.toFixed(3),\r\n          detail_barang.jumlah,\r\n          (\r\n            parseInt(detail_barang.ongkos) * parseInt(detail_barang.jumlah)\r\n          ).toLocaleString(\"kr-KO\"),\r\n          {\r\n            content: detail_barang.deskripsi,\r\n            colSpan: 2,\r\n          },\r\n        ];\r\n        tableRows.push(brg);\r\n\r\n        // let detail_total = [\r\n        //   {\r\n        //     content: `Total Barang ${detail.detail_barang.length}`,\r\n        //     colSpan: 2,\r\n        //     styles: {\r\n        //       halign: \"center\",\r\n        //       fillColor: \"#E8E5E5\",\r\n        //       textColor: \"#000\",\r\n        //     },\r\n        //   },\r\n        //   {\r\n        //     content: `${total_berat}`,\r\n        //     styles: {\r\n        //       fillColor: \"#E8E5E5\",\r\n        //       textColor: \"#000\",\r\n        //     },\r\n        //   },\r\n        //   {\r\n        //     content: `${total_jumlah}`,\r\n        //     styles: {\r\n        //       fillColor: \"#E8E5E5\",\r\n        //       textColor: \"#000\",\r\n        //     },\r\n        //   },\r\n        // ];\r\n        // tableRows.push(detail_total);\r\n      });\r\n      total_baraang = total_baraang + detail.detail_barang.length;\r\n    });\r\n\r\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\r\n    // console.log();\r\n    // let footer = [``, ``, \"\"];\r\n    // footRows.push(footer);\r\n  });\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 8,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: tbl_barang,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // tbl_barang = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(\r\n    `User                          : ${\r\n      JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n    }`,\r\n    14,\r\n    finalY + 10\r\n  );\r\n  doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  doc.text(\r\n    `Total Berat                : ${total_berat.toFixed(3)}`,\r\n    14,\r\n    finalY + 22\r\n  );\r\n  doc.text(`Total Jumlah             : ${total_jumlah}`, 14, finalY + 28);\r\n  doc.text(\r\n    `Total Ongkos            : ${parseInt(total_ongkos).toLocaleString(\r\n      \"kr-KO\"\r\n    )}`,\r\n    14,\r\n    finalY + 34\r\n  );\r\n  doc.text(`Total Barang             : ${total_baraang}`, 14, finalY + 40);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN SERVICES.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  PrintPenjualan.postMessage(string);\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN SERVICES</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default ExportLaporanService;\r\n","/* eslint-disable no-undef */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport {  getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\n// import CetakLaporanServiceExel from \"./exel/CetakLaporanServiceExel\";\r\n// import CetakLaporanBatalHutangExel from \"./exel/CetakLaporanBatalHutangExel\";\r\nimport ExportLaporanService from \"./pdf/ExportLaporanService\";\r\n// import Loading from 'react-fullscreen-loading';\r\nclass HeadFormLaporanService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    ExportLaporanService(this.props.LaporanServices);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // let total_barang = 0;\r\n    // let total_berat = 0;\r\n    // let total_ongkos = 0;\r\n    let total_service = 0;\r\n    let databarang = [];\r\n    this.props.LaporanServices.forEach((barang, index) => {\r\n      barang.detail.forEach((item, index) => {\r\n        databarang.push(item)\r\n        // item.detail_barang.forEach((detail_barang, index) => {\r\n        //   total_ongkos = total_ongkos +  parseInt(detail_barang.ongkos) * parseInt(detail_barang.jumlah);\r\n        //   total_jumlah = total_jumlah + detail_barang.jumlah;\r\n          total_service = total_service + item.total;\r\n        // })\r\n        // total_barang = total_barang + item.detail_barang.length;\r\n      });\r\n    });\r\n\r\n    const columns = [\r\n      {\r\n        dataField: \"no_faktur_service\",\r\n        text: \"No Faktur\",\r\n        footerAttrs: {\r\n          colSpan: \"7\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Services : {databarang.length} </div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"tgl_system\",\r\n        text: \"Tgl Transaksi\",\r\n        // footerAttrs: {\r\n        //   colSpan: \"7\",\r\n        // },\r\n        // footer: (cell, row, num, index) => {\r\n        //   return <div>Total Services : {databarang.length} </div>;\r\n        // },\r\n      },\r\n     \r\n      {\r\n        dataField: \"kode_sales\",\r\n        text: \"Kode Sales\",\r\n      },\r\n      {\r\n        dataField: \"nama_customer\",\r\n        text: \"Nama Customer\",\r\n      },\r\n      {\r\n        dataField: \"no_hp\",\r\n        text: \"No Hp\",\r\n      },\r\n      {\r\n        dataField: \"alamat_customer\",\r\n        text: \"Alamat Customer\",\r\n      },\r\n      {\r\n        dataField: \"kode_gudang\",\r\n        text: \"Kode Gudang\",\r\n      },\r\n      {\r\n        dataField: \"total\",\r\n        text: \"Total Service\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{total_service.toLocaleString(\"kr-KO\")} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\r\n        },\r\n      },\r\n    ]\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n              onFocus={() => setTimeout(() => {\r\n                HideKeyboard.postMessage(\"\")\r\n              }, 100)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n              onFocus={() => setTimeout(() => {\r\n                HideKeyboard.postMessage(\"\")\r\n              }, 100)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"no_hp\"\r\n              data={this.props.export ? databarang : []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Transaksi Service Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-12\">\r\n                <button\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              {/* <div className=\"col-lg-6\">\r\n                <CetakLaporanServiceExel data={this.props.LaporanServices} />\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n         {/* {/* {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFormLaporanService = reduxForm({\r\n  form: \"HeadFormLaporanService\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan,\r\n})(HeadFormLaporanService);\r\n// export default connect()(HeadFormLaporanService);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFormLaporanService);\r\n"],"sourceRoot":""}