{"version":3,"sources":["pages/Laporan/LaporanBarang/FormLaporanDetailBarang/pdf/CetakLaporanDetailBarang.jsx","pages/Laporan/LaporanBarang/FormLaporanDetailBarang/exel/LaporanDetailBarangExel.jsx","pages/Laporan/LaporanBarang/FormLaporanDetailBarang/HeadFilterLaporan.jsx","pages/Laporan/LaporanBarang/FormLaporanDetailBarang/FormDetailBarang.jsx"],"names":["CetakLaporanDetailBarang","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","finalY","total_berat","total_berat_atribut","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","content","styles","halign","forEach","item","index","rows","concat","cellWidth","kode_barcode","kode_group","kode_dept","kode_intern","kode_gudang","nama_barang","formatGram","berat","nama_atribut","berat_atribut","stock_on_hand","push","footer","colSpan","fillColor","textColor","printed","JSON","parse","localStoragedecryp","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","bodyStyles","fontSize","headStyles","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","LaporanDetailBarangExel","props","_this","Object","classCallCheck","this","_super","call","state","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","rowkey","style","display","textAlign","backgroundColor","color","map","key","list","reduce","b","Component","HeadFilterLaporan","loading","list_baki","value","name","_this2","dispatch","GetDataGroup","getDataJenis","getDataBaki","getDataGudang","setTimeout","change","kode_baki","_this3","databaki","nama_baki","dataGroup","nama_group","dataJenis","nama_dept","dataGudang","nama_gudang","onSubmit","handleSubmit","autoComplete","onKeyPress","e","preventDefault","Field","label","options","placeholder","component","ReanderSelect","field","onChange","getDataBakiByGudang","disabled","submitting","type","isLoading","tabel","keyField","columns","empty","textEmpty","export","onClick","exportPdf","exel_LaporanDetailBarangExel","reduxForm","form","enableReinitialize","connect","datamaster","FormDetailBarang","isEdit","modalDialog","LaporanBarangDetail","dataField","footerAttrs","cell","row","num","headerClasses","formatter","columnData","acc","bind","assertThisInitialized","setState","username","kode_toko","getDataNoTimeOut","kode_jenis","then","res","ToastNotification","catch","error","errorHandling","err","NotifError","react_router_dom","to","panel","FormLaporanDetailBarang_HeadFilterLaporan","React","hideModal"],"mappings":"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","file":"static/js/69.37801dda.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { formatGram, getToday, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakLaporanDetailBarang = (\r\n  data = \"\",\r\n  kode_baki = \"\",\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_berat = 0;\r\n  let total_stock = 0;\r\n  let total_berat_atribut = 0;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN BARANG DETAIL\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN BARANG DETAIL\",\r\n  });\r\n  // doc.text(`KODE BAKI : ${kode_baki}`, 14, 25);\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO`,\r\n      },\r\n      // {\r\n      //   content: `KODE BARANG`,\r\n      // },\r\n      {\r\n        content: `KODE BARCODE`,\r\n      },\r\n      {\r\n        content: `KODE GROUP`,\r\n      },\r\n      {\r\n        content: `KODE JENIS`,\r\n      },\r\n      {\r\n        content: `KODE INTERN`,\r\n      },\r\n      {\r\n        content: `KODE GUDANG`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `NAMA ATRIBUTE`,\r\n      },\r\n      {\r\n        content: `BERAT ATRIBUTE`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      // {\r\n      //   content: `JUMLAH`,\r\n      // },\r\n    ],\r\n  ];\r\n\r\n  data.forEach((item, index) => {\r\n    // item.list_barang.forEach((barang, index) => {\r\n    let rows = [\r\n      // ++index,\r\n      {\r\n        content: `${++index}`,\r\n        styles: {\r\n          cellWidth : 10\r\n        },\r\n      },\r\n      // item.kode_barang,\r\n      item.kode_barcode,\r\n      item.kode_group,\r\n      item.kode_dept,\r\n      item.kode_intern,\r\n      item.kode_gudang,\r\n      item.nama_barang,\r\n      {\r\n        content: formatGram(item.berat,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      item.nama_atribut,\r\n     \r\n      {\r\n        content: formatGram(item.berat_atribut,3),\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      }\r\n      // item.stock_on_hand,\r\n     \r\n    ];\r\n    total_berat = total_berat + item.berat;\r\n    total_stock = total_stock + item.stock_on_hand;\r\n    total_berat_atribut = total_berat_atribut + item.berat_atribut;\r\n    tableRows.push(rows);\r\n  });\r\n  \r\n  // let footer = [\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   ``,\r\n  //   `${total_berat.toFixed(1)}`,\r\n  //   ``,\r\n  //   `${total_berat_atribut.toFixed(1)}`,\r\n  //   `${total_stock.toLocaleString(\"kr-KO\")}`,\r\n  // ];\r\n  let footer = [\r\n    {\r\n      content: `Total`,\r\n      colSpan: 7,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(total_berat,3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n    {\r\n      content: ``,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${formatGram(total_berat_atribut,3)}`,\r\n      styles: {\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n        halign: 'right'\r\n      },\r\n    },\r\n\r\n    // `${sub_qty}`,\r\n  ];\r\n  tableRows.push(footer);\r\n  let printed = [\r\n    {\r\n      colSpan: 6,\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // total_berat = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`Total Berat                    :  ${total_berat.toFixed(1)}`, 14, finalY + 10);\r\n  // doc.text(`Berat Atribut                  :  ${total_berat_atribut.toFixed(1)}`, 14, finalY + 16);\r\n  // doc.text(`Stock                             :  ${total_stock.toLocaleString(\"kr-KO\")}`, 14, finalY + 22);\r\n  // doc.text(`User                              :  ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                            : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  doc.save(`LAPORAN BARANG DETAIL.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakLaporanDetailBarang;\r\n// import jsPDF from \"jspdf\";\r\n// import \"jspdf-autotable\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// // Date Fns is used to format the dates we receive\r\n\r\n// // define a generatePDF function that accepts a tickets argument\r\n// const CetakLaporanDetailBarang = (data = \"\", username = \"\", kode_baki = \"\") => {\r\n//   const doc = new jsPDF(\"l\");\r\n//   doc.setFontSize(15);\r\n//   doc.text(\"LAPORAN  BARANG DETAIL\", 14, 15);\r\n//   doc.setFontSize(10);\r\n//   doc.setProperties({\r\n//     title: \"LAPORAN  BARANG DETAIL\",\r\n//   });\r\n//   //row 1\r\n//   doc.text(`Kode Baki : ${kode_baki}`, 14, 23);\r\n//   let tableRows = [];\r\n//   let finalY = 10;\r\n//   let footRows = [];\r\n//   let total = 0;\r\n//   let sub_qty = 0;\r\n//   let sub_brt = 0;\r\n//   let tableColumn = [\r\n//     \"NO\",\r\n//     \"KODE BARANG\",\r\n//     \"KODE BARCODE\",\r\n//     \"KODE INTERN\",\r\n//     \"KODE GUDANG\",\r\n//     \"NAMA BARANG\",\r\n//     \"BERAT\",\r\n//     \"NAMA ATRIBUTE\",\r\n//     \"BERAT ATRIBUTE\",\r\n//     \"JUMLAH\",\r\n//   ];\r\n\r\n//   // console.log(JSON.stringify(data));\r\n//   // localStorage.setItem('hasil',JSON.stringify(data));\r\n//   data.forEach((item, index) => {\r\n//     // item.list_barang.forEach((barang, index) => {\r\n//     let rows = [\r\n//       ++index,\r\n//       item.kode_barang,\r\n//       item.kode_barcode,\r\n//       item.kode_intern,\r\n//       item.kode_gudang,\r\n//       item.nama_barang,\r\n//       item.berat,\r\n//       item.nama_atribut,\r\n//       item.berat_atribut,\r\n//       item.stock_on_hand,\r\n//     ];\r\n//     total = index;\r\n//     sub_qty = sub_qty + parseFloat(item.stock_on_hand);\r\n//     sub_brt = sub_brt + parseFloat(item.berat);\r\n//     tableRows.push(rows);\r\n//     let footer = [\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"\",\r\n//       \"Sub Total\",\r\n//       \"\",\r\n//       `${sub_brt.toFixed(3)}`,\r\n//       \"\",\r\n//       \"\",\r\n//       `${sub_qty}`,\r\n//     ];\r\n//     footRows.push(footer);\r\n//     doc.autoTable(tableColumn, tableRows, {\r\n//       startY: index === 0 ? 35 : finalY + 15,\r\n//         theme: \"plain\",\r\n//       foot: footRows,\r\n//       rowPageBreak: \"avoid\",\r\n//       pageBreak: \"avoid\",\r\n//       bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n//       headStyles: {\r\n//         lineWidth: 0.02,\r\n//         lineColor: \"#000\",\r\n//         fillColor: [187, 187, 187],\r\n//       },\r\n//       // theme: \"\",\r\n//     });\r\n//     finalY = doc.lastAutoTable.finalY + 10;\r\n//     tableRows = [];\r\n//   });\r\n//   // let footer = [\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"\",\r\n//   //   \"Total Barang : \",\r\n//   //   \"\" + parseFloat(total).toLocaleString(\"kr-KO\"),\r\n//   // ];\r\n//   // tableRows.push(footer);\r\n\r\n//   doc.text(`Total Barang\t: ${total}`, 14, finalY + 5);\r\n//   doc.text(`User\t             : ${username}`, 14, finalY + 10);\r\n//   doc.text(`Tgl Cetak             : ${getToday()}`, 14, finalY + 16);\r\n\r\n//   // doc.autoPrint();\r\n  // doc.save(`Laporan BARANG DETAIL.pdf`);\r\n//   var string = doc.output(\"datauristring\");\r\n//   var x = window.open();\r\n//   x.document.open();\r\n//   x.document.write(\r\n//     \"<html><head><title>LAPORAN  BARANG DETAIL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n//       string +\r\n//       \"></embed></body></html>\"\r\n//   );\r\n//   x.document.close();\r\n// };\r\n\r\n// export default CetakLaporanDetailBarang;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { formatGram, getUserdata } from \"../../../../../components/helpers/function\";\r\n\r\nclass LaporanDetailBarangExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n    render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Barang Detail\"\r\n          sheet=\"Laporan Barang Detail\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table rowkey=\"kode_member\" id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n        <thead>\r\n              <tr>\r\n                <th colSpan=\"9\" style={{textAlign : \"center\"}}> LAPORAN BARANG DETAIL </th>\r\n              </tr>\r\n              <tr>\r\n              <th colSpan=\"9\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"9\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n              {/* <tr>\r\n                <th> Kode Baki </th>\r\n                <th colSpan=\"9\" style={{textAlign : \"left\"}}> {this.props.kode_baki} </th>\r\n              </tr> */}\r\n            <tr >\r\n                <th  style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NO</th>\r\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE BARANG</th> */}\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE BARCODE</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE GROUP</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE JENIS</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE INTERN</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>KODE GUDANG</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA BARANG</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>NAMA ATRIBUT</th>\r\n                <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>BERAT ATRIBUT</th>\r\n                {/* <th style={{ backgroundColor: \"#E8E5E5\", color: \"#000\"}}>JUMLAH</th> */}\r\n            </tr>\r\n        </thead>\r\n            \r\n            <tbody>\r\n            {this.props.data.map((item, index) => (\r\n                    <tr key={index}>\r\n                        <td style={{ textAlign : \"center\" }}> {index+1}</td>\r\n                        {/* <td> {item.kode_barang}</td> */}\r\n                        <td>&nbsp;{item.kode_barcode}</td>\r\n                        <td> {item.kode_group}</td>\r\n                        <td> {item.kode_dept}</td>\r\n                        <td> {item.kode_intern}</td>\r\n                        <td> {item.kode_gudang}</td>\r\n                        <td> {item.nama_barang}</td>\r\n                        <td> {formatGram(item.berat,3)}</td>\r\n                        <td> {item.nama_atribut}</td>\r\n                        <td> {formatGram(item.berat_atribut,3)}</td>\r\n                        {/* <td style={{ border: \"1px solid #000\" }}> {item.stock_on_hand}</td> */}\r\n                    </tr>\r\n             ))}\r\n            </tbody>\r\n                    \r\n            <tfoot>\r\n                <tr>\r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"center\" }} colSpan=\"7\">  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\" }}> {formatGram(this.props.data.map(list => list.berat).reduce((a,b) => a+b,0),3)}   </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\"}}>  </th>    \r\n                    <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign : \"right\"  }}> {formatGram(this.props.data.map(list => list.berat_atribut).reduce((a,b) => a+b,0),3)}  </th>    \r\n                    {/* <th style={{backgroundColor: \"#E8E5E5\", color: \"#000\"}}> {this.props.data.map(list => list.stock_on_hand).reduce((a,b) => a+b,0)}  </th>     */}\r\n                </tr>\r\n            </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanDetailBarangExel;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  ReanderSelect,\r\n  SkeletonLoading,\r\n} from \"../../../../components/helpers/field\";\r\nimport { getDataBaki, getDataBakiByGudang, GetDataGroup, getDataGudang, getDataJenis } from \"../../../../actions/datamaster_action\";\r\nimport CetakLaporanDetailBarang from \"./pdf/CetakLaporanDetailBarang\";\r\nimport LaporanDetailBarangExel from \"./exel/LaporanDetailBarangExel\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\n// import Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    databaki: state.datamaster.getDataBaki,\r\n    dataJenis : state.datamaster.getDataJenis,\r\n    dataGroup : state.datamaster.GetDataGroup,\r\n    dataGudang : state.datamaster.getDataGudang\r\n  };\r\n};\r\nclass HeadFilterLaporan extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      list_baki: [\r\n        {\r\n          value : \"SEMUA\",\r\n          name : \"SEMUA\"\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(GetDataGroup());\r\n    this.props.dispatch(getDataJenis());\r\n    this.props.dispatch(getDataBaki());\r\n    this.props.dispatch(getDataGudang());\r\n\r\n    setTimeout(() => {\r\n        this.props.change(\"kode_group\",\"ALL\")\r\n        this.props.change(\"kode_jenis\",\"ALL\")\r\n        this.props.change(\"kode_gudang\",\"ALL\")\r\n        this.props.change(\"kode_baki\",\"ALL\")\r\n    }, 100);\r\n  }\r\n  exportPdf() {\r\n    CetakLaporanDetailBarang(this.props.data, this.props.kode_baki);\r\n  }\r\n  render() {\r\n    // console.log(this.props.dataJenis);\r\n    let databaki =  [\r\n      {\r\n        value : \"ALL\",\r\n        name : \"SEMUA\"\r\n      }\r\n    ];\r\n    this.props.databaki.forEach(list => {\r\n      let data = {\r\n        value: list.kode_baki,\r\n        name: list.kode_baki + \" - \" + list.nama_baki,\r\n      };\r\n      databaki.push(data)\r\n    });\r\n\r\n    let dataGroup =  [\r\n      {\r\n        value : \"ALL\",\r\n        name : \"SEMUA\"\r\n      }\r\n    ];\r\n    this.props.dataGroup.forEach(list => {\r\n      let data = {\r\n        value: list.kode_group,\r\n        name: list.kode_group + \" - \" + list.nama_group,\r\n      };\r\n      dataGroup.push(data)\r\n    });\r\n\r\n    let dataJenis =  [\r\n      {\r\n        value : \"ALL\",\r\n        name : \"SEMUA\"\r\n      }\r\n    ];\r\n    this.props.dataJenis.forEach(list => {\r\n      let data = {\r\n        value: list.kode_dept,\r\n        name: list.kode_dept + \" - \" + list.nama_dept,\r\n      };\r\n      dataJenis.push(data)\r\n    });\r\n\r\n    let dataGudang =  [\r\n      {\r\n        value : \"ALL\",\r\n        name : \"SEMUA\"\r\n      }\r\n    ];\r\n    this.props.dataGudang.forEach(list => {\r\n      let data = {\r\n        value: list.kode_gudang,\r\n        name: list.kode_gudang + \" - \" + list.nama_gudang,\r\n      };\r\n      dataGudang.push(data)\r\n    });\r\n    return (\r\n      <>\r\n        <form\r\n          onSubmit={(data) => this.props.handleSubmit(data)}\r\n          autoComplete=\"off\"\r\n          onKeyPress={(e) => {\r\n            e.key === \"Enter\" && e.preventDefault();\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n          <div className=\"col-3\">\r\n              {this.state.loading === false ? (\r\n                <Field\r\n                  label=\"Group\"\r\n                  name=\"kode_group\"\r\n                  options={dataGroup}\r\n                  placeholder={\"Silahkan Pilih Kode Group\"}\r\n                  component={ReanderSelect}\r\n                />\r\n              ) : (\r\n                <SkeletonLoading label=\"Kode Group\" />\r\n              )}\r\n            </div>\r\n            <div className=\"col-3\">\r\n              {this.state.loading === false ? (\r\n                <Field\r\n                  label=\"Jenis\"\r\n                  name=\"kode_jenis\"\r\n                  options={dataJenis}\r\n                  placeholder={\"Silahkan Pilih Kode Jenis\"}\r\n                  component={ReanderSelect}\r\n                />\r\n              ) : (\r\n                <SkeletonLoading label=\"Kode Jenis\" />\r\n              )}\r\n            </div>\r\n            <div className=\"col-3\">\r\n              {this.state.loading === false ? (\r\n                <Field\r\n                  label=\"Gudang\"\r\n                  name=\"kode_gudang\"\r\n                  options={dataGudang}\r\n                  placeholder={\"Silahkan Pilih Kode Gudang\"}\r\n                  onChange={(e) => {\r\n                      if(e !== \"ALL\"){\r\n                        this.props.dispatch(getDataBakiByGudang(e))\r\n                      } else {\r\n                        this.props.dispatch(getDataBaki())\r\n                      }\r\n                  }}\r\n                  component={ReanderSelect}\r\n                />\r\n              ) : (\r\n                <SkeletonLoading label=\"Kode Gudang\" />\r\n              )}\r\n            </div>\r\n            <div className=\"col-3\">\r\n              {this.state.loading === false ? (\r\n                <Field\r\n                  label=\"Kode Baki\"\r\n                  name=\"kode_baki\"\r\n                  options={databaki}\r\n                  placeholder={\"Silahkan Pilih Kode Baki\"}\r\n                  component={ReanderSelect}\r\n                />\r\n              ) : (\r\n                <SkeletonLoading label=\"Kode Baki\" />\r\n              )}\r\n            </div>\r\n              <div className=\"col-lg-9\"></div>\r\n            <div className=\"col-3\">\r\n              <label> &nbsp; </label>\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.submitting}\r\n                type=\"submit\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Memfilter\r\n                  </>\r\n                ) : (\r\n                  \"Filter Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <Tabel\r\n                keyField=\"kode_barcode\"\r\n                data={this.props.data}\r\n                columns={this.props.columns}\r\n                empty={true}\r\n                textEmpty=\"Data Laporan Barang Detail Kosong\"\r\n              />\r\n            </div>\r\n            {this.props.export ? (\r\n              <>\r\n                <div className=\"col-lg-6\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.exportPdf()}\r\n                    className=\"btn btn-warning btn-block\"\r\n                  >\r\n                    {\" \"}\r\n                    Export PDF{\" \"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                  <LaporanDetailBarangExel\r\n                    data={this.props.data}\r\n                    kode_baki={this.props.kode_baki}\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n           {/* {/* {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFilterLaporan = reduxForm({\r\n  form: \"HeadFilterLaporan\",\r\n  enableReinitialize: true,\r\n})(HeadFilterLaporan);\r\nexport default connect(maptostate, null)(HeadFilterLaporan);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../../components/panel/panel.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { formatGram, localStoragedecryp } from \"../../../../components/helpers/function.jsx\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {\r\n  NotifError,\r\n  ToastNotification,\r\n} from \"../../../../components/helpers/notification.jsx\";\r\n// import CetakLaporanDetailBarang from \"./CetakLaporanDetailBarang.jsx\";\r\n// import FormFilter from \"./FormFilter.jsx\";\r\nimport { getDataNoTimeOut } from \"../../../../config/axios.jsx\";\r\nimport HeadFilterLaporan from \"./HeadFilterLaporan.jsx\";\r\n// import LaporanDetailexel from \"./LaporanDetailExel.jsx\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass FormDetailBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      export: false,\r\n      kode_baki: [],\r\n      LaporanBarangDetail: false,\r\n      columns: [\r\n        // {\r\n        //   dataField: \"kode_barang\",\r\n        //   text: \"Kode Barang \",\r\n        //   sort: true,\r\n        //   footerAttrs: {\r\n        //     colSpan: \"5\",\r\n        //   },\r\n        //   footer: (cell, row, num, index) => {\r\n        //     return (\r\n        //       <div>Total Barang : {this.state.LaporanBarangDetail.length || 0} </div>\r\n        //     );\r\n        //   },\r\n        // },\r\n        {\r\n          dataField: \"kode_barcode\",\r\n          text: \"Kode Barcode\",\r\n          footerAttrs: {\r\n            colSpan: \"6\",\r\n          },\r\n          footer: (cell, row, num, index) => {\r\n            return (\r\n              <div>Total Barang : {this.state.LaporanBarangDetail.length || 0} </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kode_group\",\r\n          text: \"Kode Group\",\r\n        },\r\n        {\r\n          dataField: \"kode_dept\",\r\n          text: \"Kode Jenis\",\r\n        },\r\n        {\r\n          dataField: \"kode_gudang\",\r\n          text: \"Kode Gudang\",\r\n        },\r\n        {\r\n          dataField: \"kode_toko\",\r\n          text: \"Kode Baki\",\r\n        },\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          headerClasses: 'text-right',\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\"> {formatGram(cell, 3)} </div>;\r\n          },\r\n          footer: (columnData) => {\r\n            return <div className=\"text-right\"> {formatGram(columnData.reduce((acc, item) => acc + item, 0), 3)} </div>\r\n          }\r\n        },\r\n        // {\r\n        //   dataField: \"stock_on_hand\",\r\n        //   text: \"Jumlah\",\r\n        //   formatter: (cell) => {\r\n        //     return cell;\r\n        //   },\r\n        //   footer: (columnData) =>\r\n        //     columnData.reduce((acc, item) => acc + item, 0),\r\n        // },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    let data = JSON.parse(localStoragedecryp(\"userdata\"));\r\n    this.setState({ username: data.user_id });\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({ isLoading: true, kode_toko: data.kode_baki });\r\n    // if (data.kode_baki === undefined) {\r\n    //   Swal.fire({\r\n    //     // title: 'Good Job',\r\n    //     text: \"Kode Baki Tidak Boleh Kosong\",\r\n    //     icon: \"info\",\r\n    //     position: \"top-center\",\r\n    //     timer: 2000,\r\n    //     width: \"300px\",\r\n    //     height: \"100px\",\r\n    //     confirmButtonText: \"OK\",\r\n    //     showConfirmButton: true,\r\n    //   });\r\n    //   //   this.props.dispatch(reset(\"FormFilter\"));\r\n    //   this.setState({ isLoading: false });\r\n    //   return false;\r\n    // }\r\n    //   console.log(data_post);\r\n\r\n    getDataNoTimeOut(`reportbarang/barangdetail?kode_gudang=${data.kode_gudang || \"ALL\"}&kode_toko=${data.kode_baki || \"ALL\"}&kode_jenis=${data.kode_jenis || \"ALL\"}&kode_group=${data.kode_group || \"ALL\"}`)\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          this.setState({\r\n            export: false,\r\n            LaporanBarangDetail: [],\r\n          });\r\n          ToastNotification(\"info\", \"Laporan Barang Detail Tidak Tersedia\");\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Barang Detail Tersedia\");\r\n          this.setState({\r\n            export: true,\r\n            kode_baki: data.kode_baki,\r\n            LaporanBarangDetail: res.data,\r\n          });\r\n        }\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .catch((error) => this.errorHandling(error));\r\n  }\r\n  errorHandling(err) {\r\n    NotifError(err);\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan Barang</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Barang Detail</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Barang Detail</h1>\r\n        <Panel>\r\n          <PanelHeader>Filter Laporan</PanelHeader>\r\n          <br />\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <HeadFilterLaporan\r\n                  kode_baki={this.state.kode_baki}\r\n                  export={this.state.export}\r\n                  columns={this.state.columns}\r\n                  data={this.state.LaporanBarangDetail}\r\n                  isLoading={this.state.isLoading}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n        \r\n            </div>\r\n          </div>\r\n          <br />\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormDetailBarang = reduxForm({\r\n  form: \"FormDetailBarang\",\r\n  enableReinitialize: true,\r\n})(FormDetailBarang);\r\nexport default connect(maptostate, null)(FormDetailBarang);\r\n"],"sourceRoot":""}