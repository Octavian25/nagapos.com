{"version":3,"sources":["pages/Hutang/TransaksiHutang/Modal/ModalDataCustomer.jsx","Validasi/Hutang/ValidasiFormHutang.jsx","pages/Hutang/TransaksiHutang/Modal/ModalHutang.jsx","Validasi/ValidasiHutang.jsx","pages/Hutang/TransaksiHutang/Modal/ModalTambahBarang.jsx","pages/Hutang/TransaksiHutang/HeadHutang.jsx","pages/Hutang/TransaksiHutang/FormTransaksiHutang.jsx","Validasi/ManageUsers/ValidasiDataUsers.jsx","Validasi/Penjualan/ValidasiFormDataMemberPenjualan.jsx"],"names":["jenis_pelanggan","value","name","ModalDataCustomer","props","_this","Object","classCallCheck","this","_super","call","state","showMember","dispatch","getDataSales","data_customer","localStorage","getItem","JSON","parse","setState","change","e","document","getElementById","focus","_this2","getData","then","res","data","length","ToastNotification","forEach","item","index","nama_customer","no_hp","alamat_customer","catch","err","_this3","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","key","preventDefault","autoComplete","className","Field","label","placeholder","options","DataSales","filter","list","undefined","kode_sales","map","component","ReanderSelect","onChange","changemember","id","getMember","target","ReanderField","type","readOnly","normalize","NumberOnly","disabled","isLoadingDataCustomer","Fragment","Component","reduxForm","form","enableReinitialize","validate","ValidasiFormDataMemberPenjualan","connect","initialValues","kode_customer","datamaster","ValidasiFormHutang","event","errors","tgl_hutang","emasdanplastik","jml_hutang","bunga","lama_pinjam","currencyMask","createNumberMask","prefix","locale","ModalHutang","isLoadingBatal","setStartDate","bind","assertThisInitialized","date","Date","total_berat","berat","parseFloat","toFixed","setTimeout","bunga_rp","besar_kembali","tgl_jatuh_tempo","setItem","stringify","setBarangHutang","reset","hideModal","berat_emas","_this4","InputDate","selected","Gramasi","onBlur","cekBeratEmas","assign","hitungTotal","isLoadingHutang","_selector","formValueSelector","selector","tomorrow","moment","setDate","getDate","parseInt","format","getToday","toLocaleString","datakondisi","getDataKondisiBarang","kategori","GetDataGroup","ValidasiHutang","nama_barang","jumlah","ModalTambahBarang","visible","loadimage","imgfound","ModalWebCam","isLoading","harga_jual","berat_jual","hargapergram","ongkos","total","gambar","getKondisiPinjaman","setCamera","url","file","dataURLtoFile","resizeFile","showModal","library","onTakePhoto","dataUri","handleTakePhoto","HiidenFiled","loadcamera","src","foto","alt","height","width","onClick","showModalWebcam","defaultValue","loading_default","loading","background","loaderColor","databarang","showEditBarang","HeadHutang","FormModal","hasil","data_barang_hutang","detail_barang","row","kondisi","kondisi_barang","push","data_hutang","kode_member","formatDate","tgl_tempo","tgl_jth_tempo","jumlah_hutang","berat_bruto","postData","message","cek","_this5","panel","tabel","keyField","exportCsv","tambahData","btnText","handleClick","ShowModalCustomer","columns","btnOptional","namaCustomer","jenisCustomer","btnTextOptional","handleClickOptional","ShowModalBarang","btnOptional2","btnTextOptional2","handleClickOptional2","ShowModalHutang","empty","textEmpty","batalHutang","ModalGlobal","size","title","TitleModal","content","Modal_ModalDataCustomer","Modal_ModalTambahBarang","simpanBarang","Modal_ModalHutang","simpanTransaksiHutang","ValidasiDataUsers","hutang","modalDialog","FormTransaksiHutang","dataField","text","footer","columnData","reduce","acc","formatter","cell","csvExport","headerClasses","rowcontent","hapusdata","Swal","fire","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","splice","berhasil","context","handleSetPageSidebar","handleSetPageHeader","react_router_dom","to","data-tut","aria-hidden","TransaksiHutang_HeadHutang","React","contextType","PageSettings","user_id","user_name","level","alamat"],"mappings":"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","file":"static/js/13.6141923c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getDataSales } from \"../../../../actions/datamaster_action\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../../components/helpers/field\";\r\nimport { ToastNotification } from \"../../../../components/helpers/notification\";\r\nimport { getData } from \"../../../../config/axios\";\r\nimport { NumberOnly } from \"../../../../Validasi/normalize\";\r\nimport ValidasiFormDataMemberPenjualan from \"../../../../Validasi/Penjualan/ValidasiFormDataMemberPenjualan\";\r\n// import Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  let data_customer =\r\n    localStorage.getItem(\"data_customer_hutang_tmp\") === null || undefined\r\n      ? []\r\n      : JSON.parse(localStorage.getItem(\"data_customer_hutang_tmp\") || []);\r\n  return {\r\n    initialValues: {\r\n      kode_sales: data_customer.kode_sales || \"\",\r\n      jenis_pelanggan: data_customer.jenis_pelanggan || \"\",\r\n      kode_customer: data_customer.kode_customer || \"\",\r\n      nama_customer: data_customer.nama_customer || \"\",\r\n      no_hp: data_customer.no_hp || \"\",\r\n      alamat_customer: data_customer.alamat_customer || \"\",\r\n    },\r\n    DataSales: state.datamaster.getDataSales,\r\n  };\r\n};\r\n\r\nconst jenis_pelanggan = [\r\n  {\r\n    value: \"MEMBER\",\r\n    name: \"MEMBER\",\r\n  },\r\n  {\r\n    value: \"NONMEMBER\",\r\n    name: \"NON MEMBER\",\r\n  },\r\n];\r\nclass ModalDataCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMember: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataSales());\r\n    let data_customer =\r\n      localStorage.getItem(\"data_customer_hutang_tmp\") === null || undefined\r\n        ? []\r\n        : JSON.parse(localStorage.getItem(\"data_customer_hutang_tmp\") || []);\r\n    \r\n    if (data_customer && data_customer.jenis_pelanggan === \"MEMBER\") {\r\n      this.setState({\r\n        showMember: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showMember: true,\r\n      });\r\n      this.props.change(\"jenis_pelanggan\", \"NONMEMBER\")\r\n    }\r\n\r\n    // setTimeout(() => {\r\n    //   this.props.change(\"jenis_pelanggan\", \"MEMBER\");\r\n    //   this.setState({\r\n    //     showMember: false,\r\n    //   });\r\n    // }, 100);\r\n  }\r\n  changemember(e) {\r\n    // console.log(e);\r\n    if (e === \"MEMBER\") {\r\n      this.setState({\r\n        showMember: false,\r\n      });\r\n      document.getElementById('kode_customer').focus()\r\n    } else {\r\n      document.getElementById('nama_customer').focus()\r\n      this.props.change(\"kode_customer\", \"\");\r\n      this.props.change(\"nama_customer\", \"\");\r\n      this.props.change(\"no_hp\", \"\");\r\n      this.props.change(\"alamat_customer\", \"\");\r\n      this.setState({\r\n        showMember: true,\r\n      });\r\n    }\r\n  \r\n  }\r\n\r\n  getMember(e) {\r\n    // console.log(e);\r\n    getData(\"member/get/by-kode-member/\" + e)\r\n      .then((res) => {\r\n        // console.log(res.data);\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Member Yang Anda Masukan Tidak Ada !!!\");\r\n        } else {\r\n          res.data.forEach((item, index) => {\r\n            this.props.change(\"nama_customer\", item.nama_customer);\r\n            this.props.change(\"no_hp\", item.no_hp);\r\n            this.props.change(\"alamat_customer\", item.alamat_customer);\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\r\n          \"info\",\r\n          \"Terjadi Kesalahan SIlahkan Ulangi Kembali !!!\"\r\n        );\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"kode_sales\"\r\n              label=\"Pilih Kode Sales\"\r\n              placeholder=\"Masukan Kode Sales\"\r\n              options={this.props.DataSales.filter(\r\n                (list) => list.kode_sales !== undefined\r\n              ).map((list) => {\r\n                let data = {\r\n                  value: list.kode_sales,\r\n                  name: list.kode_sales,\r\n                };\r\n                return data;\r\n              })}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"jenis_pelanggan\"\r\n              label=\"Pilih Pelanggan\"\r\n              onChange={(e) => this.changemember(e)}\r\n              placeholder=\"Silahkan Pilih Pelanggan\"\r\n              options={jenis_pelanggan}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"kode_customer\"\r\n              name=\"kode_customer\"\r\n              onChange={(e) => this.getMember(e.target.value)}\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              readOnly={this.state.showMember}\r\n              label=\"Kode Customer\"\r\n              placeholder=\"Masukan Kode Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"nama_customer\"\r\n              name=\"nama_customer\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nama Customer\"\r\n              placeholder=\"Masukan Nama Customer\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"no_hp\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              normalize={NumberOnly}\r\n              label=\"No Hp\"\r\n              placeholder=\"Masukan No Hp\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"alamat_customer\"\r\n              component={ReanderField}\r\n              type=\"textarea\"\r\n              label=\"Alamat Customer\"\r\n              placeholder=\"Masukan Alamat Customer\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-8\"></div>\r\n          <div className=\"col-4\">\r\n            <button\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.isLoadingDataCustomer}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoadingDataCustomer ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n         {/* {/* {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nModalDataCustomer = reduxForm({\r\n  form: \"ModalDataCustomer\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiFormDataMemberPenjualan,\r\n})(ModalDataCustomer);\r\nexport default connect(maptostate, null)(ModalDataCustomer);\r\n","const ValidasiFormHutang = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.tgl_hutang) {\r\n      errors.tgl_hutang = \"Tanggal Hutang Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.emasdanplastik) {\r\n      errors.emasdanplastik = \"Berat Emas + Plastik Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.jml_hutang) {\r\n      errors.jml_hutang = \"Jumlah Hutang Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.bunga) {\r\n      errors.bunga = \"Bunga / Bulan Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.lama_pinjam) {\r\n      errors.lama_pinjam = \"Lama Pinjam Tidak Boleh Kosong\";\r\n    }\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiFormHutang;\r\n  ","import * as moment from \"moment-timezone\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, formValueSelector, reduxForm, reset } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport { hideModal } from \"../../../../actions/datamaster_action\";\r\nimport { setBarangHutang } from \"../../../../actions/hutang_action\";\r\nimport { InputDate, ReanderField } from \"../../../../components/helpers/field\";\r\nimport { getToday } from \"../../../../components/helpers/function\";\r\nimport ValidasiFormHutang from \"../../../../Validasi/Hutang/ValidasiFormHutang\";\r\nimport { NumberOnly, Gramasi } from \"../../../../Validasi/normalize\";\r\n\r\n// import Loading from 'react-fullscreen-loading';\r\nimport { ToastNotification } from \"../../../../components/helpers/notification\";\r\n\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  locale: \"kr-KO\",\r\n});\r\nclass ModalHutang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // tgl_hutang :\r\n      isLoadingBatal: false,\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_hutang: new Date(date),\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    let total_berat = 0;\r\n    let data = JSON.parse(localStorage.getItem(\"data_barang_hutang_tmp\"));\r\n    // console.log(data);\r\n    if (data !== null) {\r\n      data.forEach((item, index) => {\r\n        // console.log(item.total_berat);\r\n        total_berat = total_berat + item.berat;\r\n        this.props.change(\"berat_emas\", parseFloat(total_berat).toFixed(1));\r\n        this.props.change(\"emasdanplastik\", parseFloat(total_berat).toFixed(1));\r\n      });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      document.getElementById(\"emasdanplastik\").focus();\r\n    }, 100);\r\n  }\r\n  hitungTotal() {\r\n    this.props.change(\"bunga_rp\", this.props.bunga_rp);\r\n    this.props.change(\"besar_kembali\", this.props.besar_kembali);\r\n    this.props.change(\"tgl_jth_tempo\", this.props.tgl_jatuh_tempo);\r\n  }\r\n\r\n  batalHutang() {\r\n    this.setState({\r\n      isLoadingBatal: true,\r\n    });\r\n    setTimeout(() => {\r\n      localStorage.setItem(\"data_customer_hutang_tmp\", JSON.stringify([]));\r\n      localStorage.setItem(\"data_barang_hutang_tmp\", JSON.stringify([]));\r\n      this.props.dispatch(setBarangHutang([]));\r\n      this.props.dispatch(reset(\"ModalHutang\"));\r\n      this.props.dispatch(hideModal());\r\n    }, 300);\r\n  }\r\n  cekBeratEmas(e) {\r\n    let berat_emas = document.getElementById(\"berat_emas\").value;\r\n    if (parseFloat(e) < parseFloat(berat_emas)) {\r\n      ToastNotification(\r\n        \"info\",\r\n        \"Berat Yang Diinputkan Tidak Boleh Lebih Kecil Dari Berat Emas\"\r\n      );\r\n      this.props.change(\"emasdanplastik\", \"\");\r\n      document.getElementById(\"emasdanplastik\").focus();\r\n      return false;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-4\">\r\n            <Field\r\n              readOnly={true}\r\n              id=\"berat_emas\"\r\n              name=\"berat_emas\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Berat Emas\"\r\n              placeholder=\"Masukan Berat Emas\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            {/* <Field\r\n              name=\"tgl_hutang\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Tanggal Hutang\"\r\n              placeholder=\"dd-mm-yyyy\"\r\n            /> */}\r\n            <Field\r\n              name=\"tgl_hutang\"\r\n              component={InputDate}\r\n              label=\"Tanggal Hutang\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_hutang}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"emasdanplastik\"\r\n              name=\"emasdanplastik\"\r\n              type=\"text\"\r\n              component={ReanderField}\r\n              normalize={Gramasi}\r\n              onBlur={(e) => this.cekBeratEmas(e.target.value)}\r\n              label=\"Berat Emas + Plastik\"\r\n              placeholder=\"Masukan Berat Emas + Plastik\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"jml_hutang\"\r\n              component={ReanderField}\r\n              type=\"tel\"\r\n              {...currencyMask}\r\n              onChange={this.hitungTotal()}\r\n              label=\"Jumlah Hutang\"\r\n              placeholder=\"Masukan Jumlah Hutang\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"bunga\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              normalize={NumberOnly}\r\n              onChange={this.hitungTotal()}\r\n              label=\"Bunga / Bulan ( % )\"\r\n              placeholder=\"Masukan Bunga / Bulan ( % )\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"lama_pinjam\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              normalize={NumberOnly}\r\n              onChange={this.hitungTotal()}\r\n              label=\"Lama Pinjam\"\r\n              placeholder=\"Masukan Lama Pinjam\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              readOnly={true}\r\n              name=\"tgl_jth_tempo\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Tanggal Jatuh Tempo\"\r\n              placeholder=\"Masukan Tanggal Jatuh Tempo\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              readOnly={true}\r\n              name=\"bunga_rp\"\r\n              component={ReanderField}\r\n              normalize={NumberOnly}\r\n              type=\"text\"\r\n              label=\"Bunga Rp\"\r\n              placeholder=\"Masukan Bunga Rp\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              readOnly={true}\r\n              name=\"besar_kembali\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Besar Kembali\"\r\n              placeholder=\"Masukan Besar Kembali\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-8\"></div>\r\n          <div className=\"col-2\"></div>\r\n          <div className=\"col-2\">\r\n            <button\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.isLoadingHutang}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoadingHutang ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <i className=\"fas fa-paper-plane\"></i> &nbsp; Simpan Data\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {/* {this.props.isLoadingHutang ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nModalHutang = reduxForm({\r\n  form: \"ModalHutang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiFormHutang,\r\n})(ModalHutang);\r\nexport default connect((state) => {\r\n  const selector = formValueSelector(\"ModalHutang\"); // <-- same as form name\r\n  const { jml_hutang, bunga, lama_pinjam, tgl_hutang } = selector(\r\n    state,\r\n    \"jml_hutang\",\r\n    \"bunga\",\r\n    \"lama_pinjam\",\r\n    \"tgl_hutang\"\r\n  );\r\n  let bunga_rp =\r\n    (parseFloat(bunga || 0) / parseFloat(100)) *\r\n    parseFloat(jml_hutang || 0) *\r\n    (parseFloat(lama_pinjam || 0) / parseFloat(30));\r\n  let besar_kembali = parseFloat(jml_hutang || 0) + parseFloat(bunga_rp || 0);\r\n  let tomorrow = new Date(tgl_hutang);\r\n  // console.log(tomorrow);\r\n  let tgl_jatuh_tempo = moment(\r\n    tomorrow.setDate(tomorrow.getDate() + parseInt(lama_pinjam || 0))\r\n  ).format(\"YYYY-MM-DD\");\r\n  return {\r\n    initialValues: {\r\n      tgl_hutang: getToday(),\r\n    },\r\n    bunga_rp: parseFloat(bunga_rp).toLocaleString(\"kr-KO\"),\r\n    besar_kembali: parseFloat(besar_kembali).toLocaleString(\"kr-KO\"),\r\n    tgl_jatuh_tempo: tgl_jatuh_tempo,\r\n    datakondisi: state.datamaster.getDataKondisiBarang,\r\n    kategori: state.datamaster.GetDataGroup,\r\n  };\r\n})(ModalHutang);\r\n","const ValidasiHutang = (value, event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.nama_barang) {\r\n      errors.nama_barang = \"Nama Barang Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.berat) {\r\n      errors.berat = \"Berat Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.jumlah) {\r\n      errors.jumlah = \"Jumlah Tidak Boleh Kosong\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n  \r\n  export default ValidasiHutang;\r\n  ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  getKondisiPinjaman,\r\n  GetDataGroup,\r\n  showModal,\r\n} from \"../../../../actions/datamaster_action\";\r\nimport {\r\n  HiidenFiled,\r\n  ReanderField,\r\n} from \"../../../../components/helpers/field\";\r\nimport { NumberOnly, Gramasi } from \"../../../../Validasi/normalize\";\r\nimport Loading from \"react-fullscreen-loading\";\r\nimport ValidasiHutang from \"../../../../Validasi/ValidasiHutang\";\r\nimport { Camera, imgfound } from \"../../../../components/helpers/library\";\r\nimport { setCamera } from \"../../../../actions/databarang_action\";\r\nimport {\r\n  dataURLtoFile,\r\n  resizeFile,\r\n} from \"../../../../components/helpers/function\";\r\n\r\nclass ModalTambahBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: true,\r\n      loadimage: imgfound,\r\n      ModalWebCam: false,\r\n      isLoading: false,\r\n      harga_jual: true,\r\n      berat_jual: true,\r\n      hargapergram: true,\r\n      ongkos: true,\r\n      total: true,\r\n      gambar: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getKondisiPinjaman());\r\n    this.props.dispatch(GetDataGroup());\r\n    setTimeout(() => {\r\n      // document.getElementById(\"nama_barang_hutang\").focus();\r\n      this.props.dispatch(setCamera(false));\r\n    }, 100);\r\n  }\r\n\r\n  async handleTakePhoto(url) {\r\n    try {\r\n      const file = dataURLtoFile(url);\r\n      const res = await resizeFile(file);\r\n      // console.log(res);\r\n      this.props.dispatch(setCamera(res));\r\n      this.props.change(\"foto\", res);\r\n\r\n      document.getElementById(\"nama_barang_hutang\").focus()\r\n    } catch (err) {\r\n      // console.log(err);\r\n    }\r\n  }\r\n  showModalWebcam() {\r\n    this.props.dispatch(setCamera(false));\r\n    this.props.dispatch(showModal());\r\n    this.setState({ ModalWebCam: true });\r\n  }\r\n  loadcamera() {\r\n    return (\r\n      <Camera\r\n        onTakePhoto={(dataUri) => {\r\n          this.handleTakePhoto(dataUri);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-12 text-center\">\r\n            <Field\r\n              readOnly={true}\r\n              name=\"foto\"\r\n              type=\"hidden\"\r\n              component={HiidenFiled}\r\n            />\r\n            {this.state.ModalWebCam === true ? (\r\n              this.props.setCamera === false ? (\r\n                <div className=\"container\">{this.loadcamera()}</div>\r\n              ) : (\r\n                <>\r\n                  <img\r\n                    src={\r\n                      this.props.foto === undefined\r\n                        ? this.props.setCamera === false\r\n                          ? imgfound\r\n                          : this.props.setCamera\r\n                        : this.props.setCamera\r\n                        ? this.props.setCamera\r\n                        : this.props.foto\r\n                    }\r\n                    alt=\"img\"\r\n                    height=\"245px\"\r\n                    width=\"355px\"\r\n                  />\r\n                </>\r\n              )\r\n            ) : (\r\n              <>\r\n                <img\r\n                  src={\r\n                    this.props.foto === undefined\r\n                      ? this.props.setCamera === false\r\n                        ? imgfound\r\n                        : this.props.setCamera\r\n                      : this.props.setCamera\r\n                      ? this.props.setCamera\r\n                      : this.props.foto\r\n                  }\r\n                  alt=\"img\"\r\n                  height=\"245px\"\r\n                  width=\"355px\"\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"col-lg-12 text-center\">\r\n            <br></br>\r\n          </div>\r\n          <div className=\"col-lg-12 text-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => this.showModalWebcam()}\r\n            >\r\n              {\" \"}\r\n              WebCam{\" \"}\r\n            </button>\r\n          </div>\r\n          <div className=\"col-lg-12 text-center\">\r\n            <br></br>\r\n          </div>\r\n\r\n          <div className=\"col-4\">\r\n            <Field\r\n              id=\"nama_barang_hutang\"\r\n              name=\"nama_barang\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nama Barang\"\r\n              placeholder=\"Masukan Nama Barang\"\r\n            />\r\n          </div>\r\n          {/* <div className=\"col-4\">\r\n          <Field\r\n              label=\"Kondisi Barang\"\r\n              name=\"kondisi_barang\"\r\n              options={this.props.datakondisi\r\n                .map((list) => {\r\n                  let data = {\r\n                    value: list.kondisi_barang,\r\n                    name: list.kondisi_barang,\r\n                  };\r\n                  return data;\r\n                })}\r\n              placeholder={\"Silahkan Pilih Kondisi Barang\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div> */}\r\n          {/* <div className=\"col-4\">\r\n          <Field\r\n              label=\"Kategori\"\r\n              name=\"kategori\"\r\n              options={this.props.kategori.filter(\r\n                (list) => list.kode_group !== undefined)\r\n                .map((list) => {\r\n                  let data = {\r\n                    value: list.kode_group,\r\n                    name: list.kode_group +' - '+ list.nama_group,\r\n                  };\r\n                  return data;\r\n                })}\r\n              placeholder={\"Silahkan Pilih Kategori\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div> */}\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"berat\"\r\n              component={ReanderField}\r\n              normalize={Gramasi}\r\n              type=\"text\"\r\n              label=\"Berat\"\r\n              placeholder=\"Masukan Berat\"\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"jumlah\"\r\n              defaultValue=\"1\"\r\n              component={ReanderField}\r\n              type=\"jumlah\"\r\n              normalize={NumberOnly}\r\n              label=\"Jumlah\"\r\n              placeholder=\"Masukan Jumlah\"\r\n            />\r\n          </div>\r\n          <div className=\"col-12 text-right\">\r\n            <label>&nbsp;</label>\r\n            <button\r\n              className=\"btn btn-primary \"\r\n              disabled={this.props.isLoading}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <i className=\"fas fa-paper-plane\"></i> &nbsp; Simpan Data\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// ModalTambahBarang = reduxForm({\r\n//   form: \"ModalTambahBarang\",\r\n//   enableReinitialize: true,\r\n//   validate: ValidasiMasterDataHadiah,\r\n// })(ModalTambahBarang);\r\n// export default connect(maptostate, null)(ModalTambahBarang);\r\n\r\nModalTambahBarang = reduxForm({\r\n  form: \"ModalTambahBarang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiHutang,\r\n})(ModalTambahBarang);\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      jumlah: \"1\",\r\n    },\r\n    datakondisi: state.datamaster.getKondisiPinjaman,\r\n    kategori: state.datamaster.GetDataGroup,\r\n    foto: state.databarang.showEditBarang.foto,\r\n    setCamera: state.databarang.setCamera,\r\n  };\r\n})(ModalTambahBarang);\r\n","import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm, reset } from \"redux-form\";\r\nimport { hideModal, showModal } from \"../../../actions/datamaster_action\";\r\nimport { setBarangHutang } from \"../../../actions/hutang_action\";\r\nimport { formatDate } from \"../../../components/helpers/function\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\nimport { Panel } from \"../../../components/panel/panel\";\r\nimport { postData } from \"../../../config/axios\";\r\nimport ValidasiDataUsers from \"../../../Validasi/ManageUsers/ValidasiDataUsers\";\r\nimport ModalDataCustomer from \"./Modal/ModalDataCustomer\";\r\nimport ModalHutang from \"./Modal/ModalHutang\";\r\nimport ModalTambahBarang from \"./Modal/ModalTambahBarang\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    setBarangHutang: state.hutang.setBarangHutang,\r\n    DataSales: state.datamaster.getDataSales,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nclass HeadHutang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoadingDataCustomer: false,\r\n      isLoadingBatal: false,\r\n      isLoadingHutang: false,\r\n      FormModal: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n\r\n  ShowModalCustomer() {\r\n    this.setState({ FormModal: \"ShowModalCustomer\" });\r\n    this.props.dispatch(showModal());\r\n  }\r\n  ShowModalBarang() {\r\n    this.props.dispatch(showModal());\r\n    this.setState({ FormModal: \"ShowModalBarang\" });\r\n  }\r\n  ShowModalHutang() {\r\n    let data_customer = JSON.parse(localStorage.getItem(\"data_customer_hutang_tmp\"));\r\n    let data = JSON.parse(localStorage.getItem(\"data_barang_hutang_tmp\"));\r\n    if (data === null || undefined || data.length === 0 || data_customer === null || undefined || data_customer.length === 0) {\r\n      ToastNotification('info', 'Data Customer / Data Barang Belum Diisi')\r\n      return false\r\n    } else {\r\n      this.props.dispatch(showModal());\r\n      this.setState({ FormModal: \"ShowModalHutang\" });\r\n    }\r\n  }\r\n\r\n  // simpanDataCustomer(data) {\r\n    // this.setState(({\r\n    //   isLoadingDataCustomer :true\r\n    // }))\r\n    // setTimeout(() => {\r\n    //   this.setState(({\r\n    //     isLoadingDataCustomer :false\r\n    //   }))\r\n    //   this.props.dispatch(hideModal());\r\n    //   localStorage.setItem(\"data_customer_hutang_tmp\", JSON.stringify(data));\r\n    // }, 500);\r\n  // }\r\n\r\n  handleSubmit(data) {\r\n    let hasil = {\r\n      alamat_customer: data.alamat_customer || \"-\",\r\n      jenis_pelanggan: data.jenis_pelanggan || \"NONMEMBER\",\r\n      kode_customer: data.jenis_pelanggan === \"NONMEMBER\" ? \"NONMEMBER\" : data.kode_customer,\r\n      kode_sales: data.kode_sales,\r\n      nama_customer: data.nama_customer || \"REGULER\",\r\n      no_hp: data.no_hp || \"-\"\r\n    }\r\n    this.setState(({\r\n      isLoadingDataCustomer :true\r\n    }))\r\n    localStorage.setItem(\"data_customer_hutang_tmp\", JSON.stringify(hasil));\r\n    setTimeout(() => {\r\n      this.setState(({\r\n        isLoadingDataCustomer :false\r\n      }))\r\n      this.props.dispatch(hideModal());\r\n    }, 500);\r\n  }\r\n \r\n  simpanTransaksiHutang(data) {\r\n    // console.log(data);\r\n    // console.log(parseInt(data.jml_hutang));\r\n    let data_customer = JSON.parse(localStorage.getItem(\"data_customer_hutang_tmp\"));\r\n    let data_barang_hutang = JSON.parse(localStorage.getItem(\"data_barang_hutang_tmp\"));\r\n\r\n    let detail_barang = [];\r\n    data_barang_hutang.forEach((item, index) => {\r\n      let row = {\r\n        nama_barang: item.nama_barang,\r\n        kondisi: item.kondisi_barang,\r\n        kategori: item.kategori,\r\n        foto: item.foto,\r\n        berat: parseFloat(item.berat),\r\n        jumlah: parseInt(item.jumlah),\r\n      };\r\n      detail_barang.push(row);\r\n    });\r\n    let data_hutang = {\r\n      kode_sales: data_customer.kode_sales,\r\n      nama_customer: data_customer.nama_customer,\r\n      alamat_customer: data_customer.alamat_customer,\r\n      kode_member: data_customer.jenis_pelanggan === \"NONMEMBER\" ? data_customer.jenis_pelanggan : data_customer.kode_customer,\r\n      no_hp : data_customer.no_hp,\r\n      tgl_hutang : formatDate(moment(new Date(data.tgl_hutang)).format('YYYY-MM-DD')),\r\n      tgl_tempo : data.tgl_jth_tempo,\r\n      jumlah_hutang : parseInt(data.jml_hutang),\r\n      lama_pinjam : parseInt(data.lama_pinjam),\r\n      bunga : parseFloat(data.bunga),\r\n      berat_emas : parseFloat(data.berat_emas),\r\n      berat_bruto: parseFloat(data.emasdanplastik),\r\n      detail_barang : detail_barang\r\n    }\r\n\r\n    // console.log(data_hutang);\r\n    this.setState({\r\n      isLoadingHutang: true\r\n    })\r\n    setTimeout(() => {\r\n      postData('hutang/simpan', data_hutang).then((res) => {\r\n        ToastNotification('success', res.data.message)\r\n        this.setState({\r\n          isLoadingHutang: false\r\n        })\r\n        this.props.dispatch(reset('ModalHutang'))\r\n      }).then(() => {\r\n        localStorage.setItem(\"data_customer_hutang_tmp\", JSON.stringify([]));\r\n        localStorage.setItem(\"data_barang_hutang_tmp\", JSON.stringify([]));\r\n        this.props.dispatch(setBarangHutang([]))\r\n        this.setState({\r\n          isLoadingHutang: false\r\n        })\r\n      }).then(() => {\r\n        this.props.dispatch(hideModal())\r\n      })\r\n        .catch((err) => {\r\n          this.setState({\r\n            isLoadingHutang: false\r\n          })\r\n        ToastNotification('info','Transaksi Gagal Disimpan')\r\n      })\r\n    }, 500);\r\n    \r\n  }\r\n  batalHutang() {\r\n    this.setState({\r\n      isLoadingBatal: true,\r\n    });\r\n    setTimeout(() => {\r\n      localStorage.setItem(\"data_customer_hutang_tmp\", JSON.stringify([]));\r\n      localStorage.setItem(\"data_barang_hutang_tmp\", JSON.stringify([]));\r\n      this.props.dispatch(setBarangHutang([]));\r\n      this.props.dispatch(reset(\"ModalHutang\"));\r\n      this.props.dispatch(hideModal());\r\n      this.setState({\r\n        isLoadingBatal: false,\r\n      });\r\n    }, 300);\r\n  }\r\n  simpanBarang(data) {\r\n    let hasil = {\r\n      nama_barang: data.nama_barang || \"-\",\r\n      kondisi_barang: data.kondisi_barang || \"-\",\r\n      kategori: data.kategori || \"-\",\r\n      berat: parseFloat(data.berat) || 0,\r\n      jumlah: parseInt(data.jumlah) || 0,\r\n      foto: data.foto || \"-\",\r\n    };\r\n    let cek = JSON.parse(localStorage.getItem(\"data_barang_hutang_tmp\")) || [];\r\n    cek.push(hasil);\r\n    document.getElementById('nama_barang_hutang').focus()\r\n    this.props.dispatch(reset('ModalTambahBarang'));\r\n    this.props.dispatch(setBarangHutang(cek));\r\n    localStorage.setItem(\"data_barang_hutang_tmp\", JSON.stringify(cek));\r\n    this.props.dispatch(hideModal())\r\n  }\r\n  render() {\r\n    return (\r\n      <Panel>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"nama_barang\"\r\n              exportCsv={false}\r\n              data={\r\n                this.props.setBarangHutang.length === 0 ? JSON.parse(localStorage.getItem(\"data_barang_hutang_tmp\")) || []\r\n                : this.props.setBarangHutang || []\r\n              }\r\n              tambahData={true}\r\n              btnText=\"Data Customer\"\r\n              handleClick={() => this.ShowModalCustomer()}\r\n              columns={this.props.columns}\r\n              btnOptional={true}\r\n              namaCustomer={true}\r\n              jenisCustomer={true}\r\n              form=\"Hutang\"\r\n              btnTextOptional=\"Data Barang\"\r\n              handleClickOptional={() => this.ShowModalBarang()}\r\n              btnOptional2={true}\r\n              btnTextOptional2=\"Data Hutang\"\r\n              handleClickOptional2={() => this.ShowModalHutang()}\r\n              empty={true}\r\n              textEmpty=\"Data Barang Kosong\"\r\n            />\r\n          </div>\r\n          \r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-6\">\r\n            <button\r\n              onClick={() => this.batalHutang()}\r\n              className=\"btn btn-warning\"\r\n              disabled={this.state.isLoadingBatal}\r\n              type=\"button\"\r\n            >\r\n              {this.state.isLoadingBatal ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Reset\r\n                </>\r\n              ) : (\r\n                \"Reset\"\r\n              )}\r\n            </button>\r\n            </div>\r\n          </div>\r\n        <ModalGlobal\r\n          size={this.state.FormModal === \"ShowModalBarang\" ? \"l\" :\"xl\"}\r\n          title={<TitleModal state={this.state.FormModal} />}\r\n          content={\r\n            this.state.FormModal === \"ShowModalCustomer\" ? (\r\n              <ModalDataCustomer isLoadingDataCustomer={this.state.isLoadingDataCustomer} onSubmit={(data) => this.handleSubmit(data)} />\r\n            ) : this.state.FormModal === \"ShowModalBarang\" ? (\r\n              <ModalTambahBarang onSubmit={(data) => this.simpanBarang(data)} />\r\n            ) : (\r\n              <ModalHutang isLoadingHutang={this.state.isLoadingHutang} onSubmit={(data) => this.simpanTransaksiHutang(data)} />\r\n            )\r\n          }\r\n        />\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\n\r\nfunction TitleModal(data, onSubmit) {\r\n  // console.log(state.state);\r\n  if (data.state === \"ShowModalCustomer\") {\r\n    return \"Form Data Customer\";\r\n  } else if (data.state === \"ShowModalBarang\") {\r\n    return \"Form Data Barang\";\r\n  } else {\r\n    return \"Form Data Hutang\";\r\n  }\r\n}\r\nHeadHutang = reduxForm({\r\n  form: \"HeadHutang\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiDataUsers,\r\n})(HeadHutang);\r\nexport default connect(maptostate, null)(HeadHutang);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { setBarangHutang } from \"../../../actions/hutang_action.jsx\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport { PageSettings } from \"../../../config/page-settings.js\";\r\nimport HeadHutang from \"./HeadHutang.jsx\";\r\n\r\nclass FormTransaksiHutang extends React.Component {\r\n  static contextType = PageSettings;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n\r\n          footer:\"\"\r\n        },\r\n\r\n        // {\r\n        //   dataField: \"kondisi_barang\",\r\n        //   text: \"Kondisi\",\r\n        // },\r\n        // {\r\n        //   dataField: \"kategori\",\r\n        //   text: \"Kategori\",\r\n        // },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          footer: columnData => parseFloat(columnData.reduce((acc, item) => acc + item, 0)).toFixed(1)\r\n        },\r\n        {\r\n          dataField: \"jumlah\",\r\n          text: \"Jumlah\",\r\n          formatter: (cell) => {\r\n            return <span>{parseInt(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n          footer: columnData => parseInt(columnData.reduce((acc, item) => acc + item, 0)).toLocaleString(\"kr-KO\")\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row, index) => {\r\n             \r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.hapusdata(index)}\r\n                    className=\"btn btn-danger mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n          footer: \"\"\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  hapusdata(id) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin !!\",\r\n      text: \"Ingin Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      // console.log(id);\r\n      if (result.isConfirmed) {\r\n        let data = JSON.parse(localStorage.getItem('data_barang_hutang_tmp'));\r\n        data.splice(id, 1)\r\n        localStorage.setItem('data_barang_hutang_tmp', JSON.stringify(data));\r\n        this.props.dispatch(setBarangHutang(data));\r\n        this.setState({\r\n          berhasil : \"ok\"\r\n        })\r\n      }\r\n    });\r\n  }\r\n  handleSubmit(data) { }\r\n  \r\n  componentWillUnmount() {\r\n    localStorage.setItem(\"data_customer_hutang_tmp\", JSON.stringify([]));\r\n    localStorage.setItem(\"data_barang_hutang_tmp\", JSON.stringify([]));\r\n  }\r\n  componentDidMount() {\r\n    this.context.handleSetPageSidebar(false);\r\n    this.context.handleSetPageHeader(false);\r\n}\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div>\r\n       <Link to=\"/SubMenuHutang\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            data-tut=\"reactour_4\"\r\n          >\r\n            <i className=\"fa fa-angle-left mr-3\" aria-hidden=\"true\"></i> Home\r\n          </button>\r\n        </Link>\r\n        <br />\r\n        <br />\r\n        <Panel>\r\n          <PanelHeader>Transaksi Hutang</PanelHeader>\r\n          <br />\r\n          {/* Transaksi Hutang */}\r\n          <div className=\"container\">\r\n            <HeadHutang\r\n              isLoading={this.state.isLoading}\r\n              columns={this.state.columns}\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Tambah Transaksi Hutang  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default connect(null)(FormTransaksiHutang);\r\n","const ValidasiDataUsers = (value) => {\r\n    const errors = {};\r\n    if (!value.user_id) {\r\n        errors.user_id = \"User Id Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.user_name) {\r\n        errors.user_name = \"Username Tidak Boleh Kosong\";\r\n    }\r\n\r\n    if (!value.level) {\r\n        errors.level = \"Level Harus Dipilih \";\r\n    }\r\n    // if (!value.password) {\r\n    //     errors.password = \"Hassword Harus Diisi \";\r\n    // }\r\n    // if (!value.retype_password) {\r\n    //     errors.retype_password = \"Retype Password Harus Diisi \";\r\n    // }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiDataUsers;\r\n\r\n\r\n","const ValidasiFormDataMemberPenjualan = (value) => {\r\n    const errors = {};\r\n    if (!value.kode_sales) {\r\n        errors.kode_sales = \"Kode Sales Harus Dipilih\";\r\n    }\r\n    if (!value.nama_customer) {\r\n        errors.nama_customer = \"Nama Customer Harus Diisi\";\r\n    }\r\n    if (!value.no_hp) {\r\n        errors.no_hp = \"No Hp Harus Diisi\";\r\n    }\r\n    if (!value.alamat) {\r\n        errors.alamat = \"Alamat Harus Diisi\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default ValidasiFormDataMemberPenjualan;\r\n\r\n\r\n"],"sourceRoot":""}