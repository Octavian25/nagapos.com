{"version":3,"sources":["Validasi/ValidasiMasterSales.jsx","pages/DataMaster/DataSales/FormModalSales.jsx","pages/DataMaster/DataSales/MasterSales.jsx"],"names":["ValidasiMasterSales","value","event","errors","kode_sales","nama_sales","FormModalSales","state","aktif","_this2","this","setTimeout","props","isEdit","document","getElementById","focus","_this3","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","autoComplete","Fragment","Field","name","component","HiidenFiled","type","readOnly","tabIndex","id","ReanderField","label","placeholder","onBlur","setState","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","Component","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalSales","initialValues","hapusDataSales","kode","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","NotifSucces","getDataSales","catch","err","ToastNotification","response","data","MasterSales","_this","Object","classCallCheck","_super","call","modalDialog","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","_id","formEditSales","bind","assertThisInitialized","data_edit","data_post","putData","reset","error","undefined","postData","ErrorHandling","showModal","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","showModalSales","exportCsv","DataSales","empty","textEmpty","ModalGlobal","title","size","content","DataSales_FormModalSales","React"],"mappings":"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","file":"static/js/60.c942a141.chunk.js","sourcesContent":["const ValidasiMasterSales = (value, event) => {\r\n  const errors = {};\r\n  // console.log(event.charCode==13);\r\n  if (!value.kode_sales) {\r\n    errors.kode_sales = \"Kode Sales Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.nama_sales) {\r\n    errors.nama_sales = \"Nama Sales Tidak Boleh Kosong\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport default ValidasiMasterSales;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\r\nimport ValidasiMasterSales from \"../../../Validasi/ValidasiMasterSales.jsx\";\r\n// import Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowModalSales !== null) {\r\n    return {\r\n      initialValues: {\r\n        id: state.datamaster.ShowModalSales.id,\r\n        kode_sales: state.datamaster.ShowModalSales.kode_sales,\r\n        nama_sales: state.datamaster.ShowModalSales.nama_sales,\r\n      },\r\n    };\r\n  }\r\n};\r\nclass FormModalSales extends Component {\r\n  state = {\r\n    aktif : false\r\n  };\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.props.isEdit\r\n      ? document.getElementById(\"nama_sales\").focus()\r\n      : document.getElementById(\"kode_sales\").focus()\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n        autoComplete=\"off\"\r\n      >\r\n        {\r\n          this.props.isEdit ? <>\r\n             <Field\r\n              name=\"id\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={this.props.isEdit}\r\n            />\r\n          </> : null\r\n        }\r\n        <Field\r\n          tabIndex=\"1\"\r\n          id=\"kode_sales\"\r\n          name=\"kode_sales\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Kode Sales\"\r\n          placeholder=\"Masukan Kode Sales\"\r\n          readOnly={this.props.isEdit}\r\n        />\r\n        <Field\r\n          id=\"nama_sales\"\r\n          tabIndex=\"2\"\r\n          name=\"nama_sales\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Nama Sales\"\r\n          onBlur={() => this.setState({ aktif: true })}\r\n          placeholder=\"Masukan Nama Sales\"\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"3\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n         {/* {/* {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalSales = reduxForm({\r\n  form: \"ModalDataSales\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterSales,\r\n})(FormModalSales);\r\nexport default connect(maptostate, null)(FormModalSales);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\n\r\nimport {\r\n  ShowModalSales,\r\n  showModal,\r\n  getDataSales,\r\n  hideModal,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  NotifSucces,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\r\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport FormModalSales from \"./FormModalSales.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\nconst maptostate = (state) => {\r\n  return {\r\n    DataSales: state.datamaster.getDataSales,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\nconst hapusDataSales = (kode,params, dispatch) => {\r\n  Swal.fire({\r\n    // title: \"Anda Yakin !!\",\r\n    // text: \"Ingin Menghapus Data Ini ?\",\r\n    html:\r\n      \"Apakah Anda Yakin Ingin \" +\r\n      \"Menghapus \" +\r\n      \"<h1><b>Kode Sales \" +\r\n      kode +\r\n      \"</b> ?</h1>\",\r\n    icon: \"warning\",\r\n    position: \"top-center\",\r\n    cancelButtonText: \"Tidak\",\r\n    showCancelButton: true,\r\n    confirmButtonText: \"OK\",\r\n    showConfirmButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      deleteData(\"sales/delete/by-kode-sales/\" + params).then(() => {\r\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\r\n          dispatch(getDataSales())\r\n        );\r\n      }).catch((err) => {\r\n        ToastNotification(\"error\", err.response.data)\r\n      })\r\n    }\r\n  });\r\n};\r\nclass MasterSales extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_sales\",\r\n          text: \"Kode Sales\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"nama_sales\",\r\n          text: \"Nama Sales\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              id: row._id,\r\n              kode_sales: row.kode_sales,\r\n              nama_sales: row.nama_sales,\r\n            };\r\n             \r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.formEditSales(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() =>\r\n                      hapusDataSales(row.kode_sales,row._id, this.props.dispatch)\r\n                    }\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      // dataSales: [\r\n      //   {\r\n      //     kode_sales: \"SAM\",\r\n      //     nama_sales: \"Samsul Arifin\",\r\n      //   },\r\n      // ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataSales());\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let data_edit = {\r\n      nama_sales: data.nama_sales,\r\n    };\r\n    let data_post = {\r\n      kode_sales: data.kode_sales,\r\n      nama_sales: data.nama_sales,\r\n    };\r\n    this.state.isEdit\r\n      ? putData(\"sales/edit/by-kode-sales/\" + data.id, data_edit)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Diedit\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getDataSales());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalDataSales\"));\r\n          })\r\n        .catch((error) => \r\n        {\r\n          ToastNotification(\"info\", error.response === undefined ? \"Terjadi Kesalahan Saat Megirim Data \" : error.response.data)\r\n          this.setState({ isLoading: false });\r\n        }\r\n        )\r\n      : postData(\"sales/add\", data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Simpan\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getDataSales());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalDataSales\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) =>\r\n            ErrorHandling(\r\n              error,\r\n              \"sales/reactive/by-kode-sales/\",\r\n              // data.kode_sales,\r\n              data_post,\r\n              this.props.dispatch,\r\n              getDataSales(),\r\n              hideModal(),\r\n              \"ModalDataSales\"\r\n            ).then(() => {\r\n              this.setState({ isLoading: false });\r\n            })\r\n          );\r\n  }\r\n  formEditSales(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalSales(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  showModalSales() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalSales(false));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Master Sales</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Master Sales </h1>\r\n        <Panel>\r\n          <PanelHeader>Master Sales</PanelHeader>\r\n          <br />\r\n\r\n          {/* Master Sales */}\r\n          <div className=\"container\">\r\n            <Tabel\r\n              keyField=\"kode_sales\"\r\n              tambahData={true}\r\n              handleClick={() => this.showModalSales()}\r\n              exportCsv={true}\r\n              data={this.props.DataSales}\r\n              columns={this.state.columns}\r\n              empty={this.props.DataSales}\r\n              textEmpty=\"Data Sales Kosong\"\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Master Sales */}\r\n          <ModalGlobal\r\n            title={this.state.isEdit ? \"Edit Data Sales\" : \"Tambah Data Sales\"}\r\n            size=\"P\"\r\n            content={\r\n              <FormModalSales\r\n                isLoading={this.state.isLoading}\r\n                isEdit={this.state.isEdit}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* <Modal  title={ this.state.isEdit ? 'Edit Data Sales' : 'Tambah Data Sales' } content={ <FormModalKategori isEdit={this.state.isEdit} /> } isOpen={ this.props.hideModal} onSubmit={ (data)=>this.handleSubmit(data) } /> */}\r\n\r\n          {/* End Tambah Master Sales  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MasterSales);\r\n"],"sourceRoot":""}