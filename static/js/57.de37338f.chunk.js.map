{"version":3,"sources":["Validasi/ValidasiMasterKodeTransaksi.jsx","pages/DataMaster/DataKodeTransaksi/FormModalKodeTransaksi.jsx","pages/DataMaster/DataKodeTransaksi/MasterKodeTransaksi.jsx"],"names":["ValidasiMasterKodeTransaksi","value","event","errors","kode_transaksi","FormModalKodeTrransaksi","state","aktif","setTimeout","document","getElementById","focus","_this2","this","react_default","a","createElement","onSubmit","props","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","isEdit","Fragment","Field","name","component","HiidenFiled","type","readOnly","tabIndex","id","ReanderField","label","placeholder","onBlur","setState","className","onClick","dispatch","hideModal","disabled","isLoading","submitting","Component","reduxForm","form","enableReinitialize","validate","connect","datamaster","ShowModalKodeTransaksi","initialValues","kode_transaksi_lama","HapusDataKodeTransaksi","params","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","_id","NotifSucces","getParamterTransaksi","catch","err","ToastNotification","response","data","MasterKodeTransaksi","_this","Object","classCallCheck","_super","call","modalDialog","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","dataEdit","FormEditKodeTransaksi","dataKodeTransaksi","bind","assertThisInitialized","data_edit","data_post","putData","reset","error","undefined","postData","ErrorHandling","showModal","_this3","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","showModalKodeTranaksi","exportCsv","DataTransaksi","empty","textEmpty","ModalGlobal","title","size","content","FormModalKodeTransaksi","React"],"mappings":"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","file":"static/js/57.de37338f.chunk.js","sourcesContent":["const ValidasiMasterKodeTransaksi = (value,event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.kode_transaksi) {\r\n        errors.kode_transaksi = \"Kode Transaksi Tidak Boleh Kosong\";\r\n    }\r\n   \r\n    return errors;\r\n}\r\n\r\nexport default ValidasiMasterKodeTransaksi;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\nimport { HiidenFiled, ReanderField } from \"../../../components/helpers/field\";\r\nimport ValidasiMasterKodeTransaksi from \"../../../Validasi/ValidasiMasterKodeTransaksi.jsx\";\r\n// import Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowModalKodeTransaksi !== null) {\r\n    return {\r\n      initialValues: {\r\n        id: state.datamaster.ShowModalKodeTransaksi.id,\r\n        kode_transaksi: state.datamaster.ShowModalKodeTransaksi.kode_transaksi,\r\n        kode_transaksi_lama:\r\n          state.datamaster.ShowModalKodeTransaksi.kode_transaksi,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nclass FormModalKodeTrransaksi extends Component {\r\n  state = {\r\n    aktif: false,\r\n  };\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      document.getElementById(\"kode_transaksi\").focus();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n         {\r\n          this.props.isEdit ? <>\r\n             <Field\r\n              name=\"id\"\r\n              component={HiidenFiled}\r\n              type=\"hidden\"\r\n              readOnly={this.props.isEdit}\r\n            />\r\n          </> : null\r\n        }\r\n        <input type=\"hidden\" name=\"kode_transaksi_lama\" />\r\n        <Field\r\n          tabIndex=\"1\"\r\n          id=\"kode_transaksi\"\r\n          name=\"kode_transaksi\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Kode Transaksi\"\r\n          placeholder=\"Masukan Kode Transaksi\"\r\n          onBlur={() => this.setState({ aktif: true })}\r\n        />\r\n        {/* <Select options={options} /> */}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"2\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.submitting}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n         {/* {/* {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalKodeTrransaksi = reduxForm({\r\n  form: \"ModalKodeTrransaksi\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterKodeTransaksi,\r\n})(FormModalKodeTrransaksi);\r\nexport default connect(maptostate, null)(FormModalKodeTrransaksi);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport {\r\n  ShowModalKodeTransaksi,\r\n  showModal,\r\n  getParamterTransaksi,\r\n  hideModal,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  NotifSucces,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport { ErrorHandling } from \"../../../components/helpers/function.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\nimport FormModalKodeTransaksi from \"./FormModalKodeTransaksi.jsx\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    DataTransaksi: state.datamaster.getParamterTransaksi,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nconst HapusDataKodeTransaksi = (params, dispatch) => {\r\n  Swal.fire({\r\n    // title: \"Anda Yakin !!\",\r\n    // text: \"Ingin Menghapus Data Ini ?\",\r\n    html:\r\n      \"Apakah Anda Yakin Ingin \" +\r\n      \"Menghapus \" +\r\n      \"<h1><b>Kode Transaksi \" +\r\n      params.kode_transaksi +\r\n      \"</b> ?</h1>\",\r\n    icon: \"warning\",\r\n    position: \"top-center\",\r\n    cancelButtonText: \"Tidak\",\r\n    showCancelButton: true,\r\n    confirmButtonText: \"OK\",\r\n    showConfirmButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      deleteData(\"paratransaksi/delete/by-kode-transaksi/\" + params._id).then(() => {\r\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\r\n          dispatch(getParamterTransaksi())\r\n        );\r\n      }).catch((err) => {\r\n        ToastNotification(\"error\", err.response.data)\r\n      })\r\n    }\r\n  });\r\n};\r\nclass MasterKodeTransaksi extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_transaksi\",\r\n          text: \"Kode Transaksi \",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              id: row._id,\r\n              kode_transaksi: row.kode_transaksi,\r\n            };\r\n             \r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.FormEditKodeTransaksi(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() =>\r\n                      HapusDataKodeTransaksi(\r\n                        row,\r\n                        this.props.dispatch\r\n                      )\r\n                    }\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      dataKodeTransaksi: [\r\n        {\r\n          kode_transaksi: \"Uang Makan\",\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getParamterTransaksi());\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let data_edit = {\r\n      kode_transaksi: data.kode_transaksi,\r\n    };\r\n    let data_post = {\r\n      id: data.id,\r\n      kode_transaksi: data.kode_transaksi,\r\n    };\r\n    this.state.isEdit\r\n      ? putData(\r\n          \"paratransaksi/edit/by-kode-transaksi/\" + data.id,data_edit)\r\n          .then(() => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => ToastNotification(\"success\", \"Data Berhasil Diedit\"))\r\n          .then(() => {\r\n            this.props.dispatch(getParamterTransaksi());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalKodeTrransaksi\"));\r\n          })\r\n          .catch((error) => {\r\n            ToastNotification(\"info\", error.response === undefined ? \"Terjadi Kesalahan Saat Megirim Data \" : error.response.data)\r\n          this.setState({ isLoading: false });  \r\n          })\r\n      : postData(\"paratransaksi/add\", data_post)\r\n          .then(() => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => {\r\n            ToastNotification(\"success\", \"Data Berhasil Disimpan\");\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(getParamterTransaksi());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalKodeTrransaksi\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) =>\r\n            ErrorHandling(\r\n              error,\r\n              \"paratransaksi/reactive/by-kode-transaksi/\",\r\n              // data.kode_transaksi,\r\n              data_post,\r\n              this.props.dispatch,\r\n              getParamterTransaksi(),\r\n              hideModal(),\r\n              \"ModalKodeTrransaksi\"\r\n            ).then(() => {\r\n              this.setState({ isLoading: false });\r\n            })\r\n          );\r\n  }\r\n\r\n  FormEditKodeTransaksi(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalKodeTransaksi(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  showModalKodeTranaksi() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalKodeTransaksi(false));\r\n    this.setState({\r\n      isEdit: false,\r\n      isLoading: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Master Kode Transaksi</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Master Kode Transaksi </h1>\r\n        <Panel>\r\n          <PanelHeader>Master Kode Transaksi</PanelHeader>\r\n          <br />\r\n\r\n          {/* Master Kode Transaksi */}\r\n          <div className=\"container\">\r\n            <Tabel\r\n              keyField=\"kode_transaksi\"\r\n              tambahData={true}\r\n              handleClick={() => this.showModalKodeTranaksi()}\r\n              exportCsv={true}\r\n              data={this.props.DataTransaksi}\r\n              columns={this.state.columns}\r\n              empty={this.props.DataTransaksi}\r\n              textEmpty=\"Data Jenis Kosong\"\r\n            />\r\n            {/* <ToolkitProvider\r\n              keyField=\"kode_transaksi\"\r\n              data={this.props.DataTransaksi || []}\r\n              columns={this.state.columns}\r\n              search\r\n              exportCSV={{\r\n                fileName: \"Export Master Kondisi Transaksi.csv\",\r\n              }}\r\n            >\r\n              {(props) => (\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <button\r\n                      onClick={() => this.showModalKodeTranaksi()}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      {\" \"}\r\n                      <i className=\"fa fa-plus\"></i>{\" \"}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"text-right\">\r\n                      <SearchBar {...props.searchProps} />\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"col-12\">\r\n                    <BootstrapTable\r\n                      pagination={paginationFactory()}\r\n                      {...props.baseProps}\r\n                    />\r\n                    <br />\r\n                    <ExportCSVButton {...props.csvProps}>\r\n                      Export CSV!!\r\n                    </ExportCSVButton>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </ToolkitProvider> */}\r\n          </div>\r\n          <br />\r\n          {/* End Master Kode Transaksi */}\r\n          <ModalGlobal\r\n            title={\r\n              this.state.isEdit\r\n                ? \"Edit Data Kode Transaksi\"\r\n                : \"Tambah Data Kode Transaksi\"\r\n            }\r\n            size=\"P\"\r\n            content={\r\n              <FormModalKodeTransaksi\r\n                isLoading={this.state.isLoading}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* End Tambah Master Kode Transaksi  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MasterKodeTransaksi);\r\n"],"sourceRoot":""}