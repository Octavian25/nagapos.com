{"version":3,"sources":["pages/DataMaster/DataKadar/FormModalKadar.jsx","pages/DataMaster/DataKadar/MasterKadar.jsx","Validasi/ValidasiMasterJenis.jsx"],"names":["option","value","name","FormModalKadar","props","_this","Object","classCallCheck","this","_super","call","state","aktif","_this2","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","e","key","preventDefault","className","Field","id","label","options","type_kadar","disabled","isEdit","onBlur","setState","placeholder","component","ReanderSelect","tabIndex","ReanderField","type","normalize","NumberOnly","onClick","dispatch","hideModal","isLoading","Fragment","Component","reduxForm","form","enableReinitialize","validate","ValidasiMasterJenis","connect","datamaster","ShowModalDataKadar","initialValues","kadar","hapusDataKadar","Swal","fire","html","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteData","data","NotifSucces","getDataKadar","catch","err","ToastNotification","response","MasterKadar","modalDialog","columns","dataField","text","csvExport","headerClasses","formatter","rowcontent","row","bind","assertThisInitialized","undefined","title","data_edit","data_post","putData","reset","error","postData","ErrorHandling","NotifError","dataEdit","showModal","_this3","react_router_dom","to","panel","tabel","keyField","tambahData","handleClick","exportCsv","DataKadar","empty","textEmpty","ModalGlobal","size","content","DataKadar_FormModalKadar","React","event","errors","kode_group","kode_kategori","kode_jenis","nama_jenis"],"mappings":"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","file":"static/js/37.4b781713.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { hideModal } from \"../../../actions/datamaster_action\";\r\n\r\nimport { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\r\nimport { NumberOnly } from \"../../../Validasi/normalize\";\r\nimport ValidasiMasterJenis from \"../../../Validasi/ValidasiMasterJenis.jsx\";\r\n// import Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.ShowModalDataKadar !== null) {\r\n    return {\r\n      initialValues: {\r\n        kadar: state.datamaster.ShowModalDataKadar.kadar,\r\n        type_kadar: state.datamaster.ShowModalDataKadar.type_kadar,\r\n      },\r\n    };\r\n  }\r\n};\r\nconst option = [\r\n  {\r\n    value: \"KADAR-CETAK\",\r\n    name: \"KADAR-CETAK\",\r\n  },\r\n  {\r\n    value: \"KADAR-BELI\",\r\n    name: \"KADAR-BELI\",\r\n  },\r\n  {\r\n    value: \"KADAR-JUAL\",\r\n    name: \"KADAR-JUAL\",\r\n  },\r\n];\r\nclass FormModalKadar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      aktif: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // setTimeout(() => {\r\n    //   document.getElementById(\"type_kadar\").focus();\r\n    // }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        autoComplete=\"off\"\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <Field\r\n            id=\"type_kadar\"\r\n            label=\"Type Kadar\"\r\n            name=\"type_kadar\"\r\n            options={option}\r\n            value={this.props.type_kadar}\r\n            disabled={this.props.isEdit}\r\n            onBlur={() => this.setState({ aktif: true })}\r\n            placeholder={\"Silahkan Pilih Type Kadar\"}\r\n            component={ReanderSelect}\r\n          />\r\n        </div>\r\n        <Field\r\n          id=\"kadar\"\r\n          tabIndex=\"1\"\r\n          name=\"kadar\"\r\n          component={ReanderField}\r\n          type=\"text\"\r\n          label=\"Kadar\"\r\n          normalize={NumberOnly}\r\n          onBlur={() => this.setState({ aktif: true })}\r\n          placeholder=\"Masukan Kadar\"\r\n        />\r\n        \r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-right\">\r\n            <button\r\n              className=\"btn btn-white\"\r\n              onClick={() => this.props.dispatch(hideModal())}\r\n              type=\"button\"\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Batal\r\n            </button>\r\n            &nbsp;\r\n            <button\r\n              tabIndex=\"2\"\r\n              className={this.state.aktif ? \"btn btn-primary\" : \"btn btn-white\"}\r\n              disabled={this.props.isLoading}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                \"Simpan Data\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n         {/* {/* {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalKadar = reduxForm({\r\n  form: \"ModalKadar\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterJenis,\r\n})(FormModalKadar);\r\nexport default connect(maptostate, null)(FormModalKadar);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport {\r\n  ShowModalDataKadar,\r\n  showModal,\r\n  getDataKadar,\r\n  hideModal,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  NotifError,\r\n  NotifSucces,\r\n  ToastNotification,\r\n} from \"../../../components/helpers/notification.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport { deleteData, postData, putData } from \"../../../config/axios.jsx\";\r\nimport Tabel from \"../../../components/helpers/tabel.jsx\";\r\nimport FormModalKadar from \"./FormModalKadar.jsx\";\r\nimport ModalGlobal from \"../../../components/helpers/ModalGlobal.jsx\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    // DataGroup: state.datamaster.GetDataGroup,\r\n    DataKadar: state.datamaster.getDataKadar,\r\n    hideModal: state.datamaster.modalDialog,\r\n  };\r\n};\r\n\r\nconst hapusDataKadar = (kadar, type_kadar, dispatch) => {\r\n  Swal.fire({\r\n    // title: 'Anda Yakin !!',\r\n    // text: 'Ingin Menghapus Data Ini ?',\r\n    html:\r\n      \"Apakah Anda Yakin Ingin \" +\r\n      \"Menghapus \" +\r\n      \"<h1><b>Kadar \" +\r\n      kadar +\r\n      \"</b> ?</h1>\",\r\n    icon: \"warning\",\r\n    position: \"top-center\",\r\n    cancelButtonText: \"Tidak\",\r\n    showCancelButton: true,\r\n    confirmButtonText: \"OK\",\r\n    showConfirmButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      deleteData(\"kadar/delete/\" + kadar + \"&\" + type_kadar, {\r\n        data: {\r\n          kadar: kadar,\r\n          type_kadar: type_kadar,\r\n        },\r\n      }).then(() => {\r\n        NotifSucces(\"Data Berhasil Di Hapus\").then(() =>\r\n          dispatch(getDataKadar())\r\n        );\r\n      }).catch((err) => {\r\n        ToastNotification(\"error\", err.response.data)\r\n      })\r\n    }\r\n  });\r\n};\r\nclass MasterKadar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kadar\",\r\n          text: \"Kadar\",\r\n        },\r\n        {\r\n          dataField: \"type_kadar\",\r\n          text: \"Type Kadar\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            // let dataEdit = {\r\n            //   kadar: row.kadar,\r\n            //   type_kadar: row.type_kadar,\r\n            // };\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  {/* <button\r\n                    onClick={() => this.formEditKadar(dataEdit)}\r\n                    className=\"btn btn-primary mr-3\"\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </button> */}\r\n                  <button\r\n                    onClick={() =>\r\n                      hapusDataKadar(\r\n                        row.kadar,\r\n                        row.type_kadar,\r\n                        this.props.dispatch\r\n                      )\r\n                    }\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataKadar());\r\n  }\r\n  handleSubmit(data) {\r\n    this.setState({ isLoading: true });\r\n\r\n    if (data.type_kadar === undefined) {\r\n      Swal.fire({\r\n        title: \"Oopss!! \",\r\n        text: \"Type Kadar Harus Dipilih !!!\",\r\n        icon: \"info\",\r\n      });\r\n      this.setState({ isLoading: false });\r\n      return false;\r\n    }\r\n    let data_edit = {\r\n      kadar: data.kadar,\r\n    };\r\n    let data_post = {\r\n      kadar: data.kadar,\r\n      type_kadar: data.type_kadar,\r\n    };\r\n    this.state.isEdit\r\n      ? putData(\"jenis/edit/by-kode-jenis/\" + data.kadar, data_edit)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => ToastNotification(\"success\", \"Data Berhasil Diedit\"))\r\n          .then(() => {\r\n            this.props.dispatch(getDataKadar());\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalKadar\"));\r\n          })\r\n        .catch((error) => {\r\n          ToastNotification(\"info\", \"Terjadi Kesalahan Saat Mengirim Data\")\r\n          this.setState({ isLoading: false });\r\n          })\r\n      : postData(\"kadar/add\", data_post)\r\n          .then(() => {\r\n            this.props.dispatch(hideModal());\r\n          })\r\n          .then(() => ToastNotification(\"success\", \"Data Berhasil Disimpan\"))\r\n          .then(() => {\r\n            this.props.dispatch(getDataKadar());\r\n          })\r\n          .then(() => {\r\n            this.props.dispatch(reset(\"ModalKadar\"));\r\n          })\r\n          .then(() => {\r\n            this.setState({ isLoading: false });\r\n          })\r\n          .catch((error) => this.ErrorHandling(error));\r\n  }\r\n  ErrorHandling(err) {\r\n    this.setState({ isLoading: false });\r\n    NotifError(err);\r\n  }\r\n  formEditKadar(dataEdit) {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalDataKadar(dataEdit));\r\n    this.setState({\r\n      isEdit: true,\r\n    });\r\n  }\r\n  ShowModalDataKadar() {\r\n    this.props.dispatch(showModal());\r\n    this.props.dispatch(ShowModalDataKadar(false));\r\n    this.setState({\r\n      isEdit: false,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Master Kadar</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Master Kadar </h1>\r\n        <Panel>\r\n          <PanelHeader>Master Kadar</PanelHeader>\r\n          <br />\r\n\r\n          {/* Master Kadar */}\r\n          <div className=\"container\">\r\n            <Tabel\r\n              keyField=\"kondisi\"\r\n              tambahData={true}\r\n              handleClick={() => this.ShowModalDataKadar()}\r\n              exportCsv={true}\r\n              data={this.props.DataKadar}\r\n              columns={this.state.columns}\r\n              empty={this.props.DataKadar}\r\n              textEmpty=\"Data Kadar Kosong\"\r\n            />\r\n          </div>\r\n          <br />\r\n          {/* End Master Kadar */}\r\n\r\n          <ModalGlobal\r\n            title={this.state.isEdit ? \"Edit Data Kadar\" : \"Tambah Data Kadar\"}\r\n            size=\"P\"\r\n            content={\r\n              <FormModalKadar\r\n                isLoading={this.state.isLoading}\r\n                isEdit={this.state.isEdit}\r\n                onSubmit={(data) => this.handleSubmit(data)}\r\n              />\r\n            }\r\n          />\r\n\r\n          {/* End Tambah Master Kadar  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(MasterKadar);\r\n","const ValidasiMasterJenis = (value,event) => {\r\n    const errors = {};\r\n    // console.log(event.charCode==13);\r\n    if (!value.kode_group) {\r\n        errors.kode_kategori = \"Kode Kategori Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.kode_jenis) {\r\n        errors.kode_jenis = \"Kode Jenis Tidak Boleh Kosong\";\r\n    }\r\n    if (!value.nama_jenis) {\r\n        errors.nama_jenis = \"Nama Jenis Tidak Boleh Kosong\";\r\n    }\r\n    // console.log(value.kode_group);\r\n   \r\n    return errors;\r\n}\r\n\r\nexport default ValidasiMasterJenis;"],"sourceRoot":""}