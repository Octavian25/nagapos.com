{"version":3,"sources":["pages/Laporan/LaporanPenjualan/LaporanPenjualanMarketPlace/pdf/ExportTransaksiPenjualanMarketPlace.jsx","pages/Laporan/LaporanPenjualan/LaporanPenjualanMarketPlace/exel/LaporanPenjualanMarketPlaceExel.jsx","pages/Laporan/LaporanPenjualan/LaporanPenjualanMarketPlace/HeadLaporanPenjualanMkc.jsx"],"names":["ExportTransaksiPenjualanMarketPlace","data","arguments","length","undefined","doc","jsPDF","tableRows","finalY","total_berat_footer","total_harga_total_footer","total_baraang","total_ongkos","total_harga_jual","jml_alamat","getUserdata","alamat_toko","setFontSize","text","nama_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","forEach","item","index","rows","no_faktur_jual","nama_customer","kode_dept","nama_barang","content","berat","toFixed","styles","halign","textColor","parseInt","ongkos","toLocaleString","harga_jual","harga_total","kode_marketplace","parseFloat","push","footerSemua","colSpan","fillColor","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","LaporanPenjualanMarketPlaceExel","props","_this","Object","classCallCheck","this","_super","call","state","total_barang","stock_on_hand","berat_atribut","harga_gram","harga_atribut","berat_selisih","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","textAlign","backgroundColor","color","map","row","key","Component","HeadLaporanPenjualanMkc","date","Date","type_laporan","databarang","columns","dataField","footerAttrs","footer","cell","num","LaporanDataPenjualan","headerClasses","reduce","b","formatter","setStartDate","bind","assertThisInitialized","setLastDate","change","dispatch","GetDataGroup","getDataMarketplace","setState","e","_this2","datagroup","value","name","list","kode_group","marketplace","nama_marketplace","expandRow","renderer","formatGram","berat_awal","nama_atribut","showExpandColumn","expandByColumnOnly","onSubmit","handleSubmit","autoComplete","Field","component","InputDate","label","type","selected","onChange","placeholder","options","ReanderSelect","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_LaporanPenjualanMarketPlaceExel","loading_default","loading","background","loaderColor","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","datamaster","initialValues","getTglSystem"],"mappings":"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","file":"static/js/94.9e42e73f.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday, getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst ExportTransaksiPenjualanMarketPlace = (\r\n  data = \"\",\r\n  type_laporan = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // console.log(data);\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let finalY = 30;\r\n  let total_berat_footer = 0;\r\n  let total_harga_total_footer =0\r\n  let total_baraang = 0\r\n  let total_ongkos = 0\r\n  let total_harga_jual = 0\r\n  \r\n  \r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN PENJUALAN MARKETPLACE\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN PENJUALAN MARKETPLACE\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  let tableColumnSemua = [\r\n    // [\r\n    //   {\r\n    //     content: `No Faktur Group : ${item._id.no_faktur_group}`,\r\n    //     colSpan: 10,\r\n    //   },\r\n    // ],\r\n    [\r\n      {\r\n        content: `NO FJ`,\r\n      },\r\n      {\r\n        content: `NAMA MEMBER`,\r\n      },\r\n      {\r\n        content: `KODE JENIS`,\r\n      },\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n     \r\n      {\r\n        content: `Ongkos`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA JUAL`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA TOTAL`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `MARKETPLACE`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  \r\n \r\n  \r\n  data.forEach((item, index) => {\r\n\r\n    // let data = [\r\n    //   {\r\n    //     content: `No Faktur Group : ${item._id.no_faktur_group}`,\r\n    //     colSpan: \"10\",\r\n    //   },\r\n    // ];\r\n    // tableRows.push(data);\r\n\r\n    // item.pembayaran.forEach((data_pembayaran, index) => {\r\n    //   // console.log(data_pembayaran.jumlah_in);\r\n     \r\n    // })\r\n   \r\n    // item.detail.forEach((item, index) => {\r\n     \r\n      let rows = [\r\n        item.no_faktur_jual,\r\n        // item.kode_barcode,\r\n        // item.kode_member,\r\n        item.nama_customer,\r\n        item.kode_dept,\r\n        item.nama_barang,\r\n        // formatGram(item.berat_awal, 3),\r\n        {\r\n          content: item.berat.toFixed(2),\r\n          styles: {\r\n            halign: 'right',\r\n            textColor: \"#000\",\r\n          },\r\n        },\r\n       \r\n        {\r\n          content:    parseInt(item.ongkos).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n            textColor: \"#000\",\r\n          },\r\n        },\r\n        {\r\n          content:  parseInt(item.harga_jual).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n            textColor: \"#000\",\r\n          },\r\n        },\r\n        {\r\n          content:  parseInt(item.harga_total).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n            textColor: \"#000\",\r\n          },\r\n        },\r\n        {\r\n          content:item.kode_marketplace,\r\n          styles: {\r\n            halign: 'right',\r\n            textColor: \"#000\",\r\n          },\r\n        },\r\n      \r\n      ];\r\n\r\n      total_harga_jual = total_harga_jual + parseInt(item.harga_jual);\r\n      total_ongkos = total_ongkos + parseInt(item.ongkos);\r\n      total_berat_footer = total_berat_footer + parseFloat(item.berat);\r\n      total_harga_total_footer = total_harga_total_footer + parseInt(item.harga_total);\r\n    \r\n      tableRows.push(rows);\r\n      // });\r\n      \r\n    });\r\n    total_baraang = total_baraang + data.length;\r\n\r\n  \r\n  \r\n  let footerSemua = [\r\n    {\r\n      content: `Total Transaksi Penjualan : ${total_baraang}`,\r\n      colSpan: 4,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat_footer.toFixed(2)}`,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_ongkos.toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_harga_jual.toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${parseInt(total_harga_total_footer).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: ``,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n  ];\r\n  \r\n  tableRows.push(footerSemua);\r\n  \r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 13,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n  \r\n  doc.autoTable({\r\n    head:  tableColumnSemua,\r\n    body: tableRows,\r\n    // foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // tot_berat = 0;\r\n  // tot_onkos = 0;\r\n  // tot_harga_jual = 0;\r\n  // tot_harga_gram = 0;\r\n  // tot_berat_atribut = 0;\r\n  // tot_harga_atribut = 0;\r\n  // tot_harga_total = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(`User                           : ${JSON.parse(localStoragedecryp(\"userdata\")).user_id}`, 14, finalY + 10);\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  // doc.text(`Total Barang Terjual : ${total_barang}`, 14, finalY + 20);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  doc.save(`LAPORAN PENJUALAN MARKETPLACE.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN PENJUALAN MARKETPLACE</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default ExportTransaksiPenjualanMarketPlace;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport {  getUserdata, localStoragedecryp } from \"../../../../../components/helpers/function\";\r\nclass LaporanPenjualanMarketPlaceExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let stock_on_hand = 0;\r\n    let berat = 0;\r\n    let berat_atribut = 0;\r\n    let total_barang = 0;\r\n    let harga_jual = 0;\r\n    let harga_atribut = 0;\r\n    let berat_selisih = 0;\r\n    let harga_gram = 0;\r\n    let harga_total = 0;\r\n    let ongkos = 0;\r\n    this.props.data.forEach((item, index) => {\r\n    \r\n      // barang.detail.forEach((item, index) => {\r\n        stock_on_hand = stock_on_hand + item.stock_on_hand;\r\n        berat_atribut = berat_atribut + item.berat_atribut;\r\n        berat = berat + item.berat;\r\n        harga_jual = harga_jual + item.harga_jual;\r\n        ongkos = ongkos + item.ongkos;\r\n        harga_total = harga_total + item.harga_total;\r\n        harga_gram = harga_gram + item.harga_gram;\r\n        harga_atribut = harga_atribut + item.harga_atribut;\r\n        berat_selisih = berat_selisih + item.berat_selisih;\r\n      // });\r\n    });\r\n    total_barang = total_barang + this.props.data.length;\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Penjualan Marketplace\"\r\n          sheet=\"Laporan Penjualan Marketplace\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"7\" style={{ textAlign: \"center\" }}>\r\n                {\" \"}\r\n                LAPORAN TRANSAKSI PENJUALAN{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"7\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"7\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"7\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"7\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"7\"></th>\r\n            </tr>\r\n            <tr>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NO FJ\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA MEMBER\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                KODE JENIS\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA BARANG\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                BERAT\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                ONGKOS\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                HARGA JUAL\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                HARGA TOTAL\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                MARLETPLACE\r\n              </td>\r\n             \r\n              \r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {this.props.data.map((row, index) => (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      {row.no_faktur_jual}\r\n                    </td>\r\n                    <td>\r\n                      {row.nama_customer}\r\n                    </td>\r\n                    <td>\r\n                      {row.kode_dept}\r\n                    </td>\r\n                    <td>\r\n                      {row.nama_barang}\r\n                    </td>\r\n                    <td style={{textAlign:\"right\"}}>\r\n                      {row.berat.toFixed(2)}\r\n                    </td>\r\n                    <td style={{textAlign:\"right\"}}>\r\n                    &nbsp;{row.ongkos.toLocaleString(\"kr-KO\")}\r\n                    </td>\r\n                    <td style={{textAlign:\"right\"}}>\r\n                    &nbsp;{row.harga_jual.toLocaleString(\"kr-KO\")}\r\n                    </td>\r\n                    <td style={{textAlign:\"right\"}}>\r\n                      &nbsp;{row.harga_total.toLocaleString(\"kr-KO\")}\r\n                    </td>\r\n                    <td style={{textAlign:\"right\"}}>\r\n                    &nbsp;{row.kode_marketplace}\r\n                    </td>\r\n                  </tr>\r\n          ))}\r\n          </tbody>\r\n          <tfoot>\r\n          <tr>\r\n            <td colSpan=\"4\" style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign :\"center\" }}>\r\n              Total Transaksi Penjualan : {total_barang} \r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>\r\n              {berat.toFixed(2)}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" , textAlign: \"right\"}}>\r\n            &nbsp;{ongkos.toLocaleString(\"kr-KO\")}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" , textAlign: \"right\"}}>\r\n            &nbsp;{harga_jual.toLocaleString(\"kr-KO\")}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" , textAlign: \"right\"}}>\r\n            &nbsp;{harga_total.toLocaleString(\"kr-KO\")}\r\n            </td>\r\n            <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" , textAlign: \"right\"}}>\r\n            </td>\r\n         \r\n            </tr>\r\n            </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanPenjualanMarketPlaceExel;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate, ReanderSelect } from \"../../../../components/helpers/field\";\r\nimport {\r\n  formatGram,\r\n  getTglSystem,\r\n} from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\n// import LaporanExelPenjualan from \"./exel/LaporanExelPenjualan\";\r\n// import LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\r\n// import ExportTransaksiPenjualan from \"./pdf/ExportTransaksiPenjualan\";\r\nimport Loading from \"react-fullscreen-loading\";\r\nimport { GetDataGroup, getDataMarketplace } from \"../../../../actions/datamaster_action\";\r\nimport ExportTransaksiPenjualanMarketPlace from \"./pdf/ExportTransaksiPenjualanMarketPlace\";\r\nimport LaporanPenjualanMarketPlaceExel from \"./exel/LaporanPenjualanMarketPlaceExel\";\r\nclass HeadLaporanPenjualanMkc extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      type_laporan: \"SEMUA\",\r\n      databarang: [],\r\n      columns : [\r\n        {\r\n          dataField: \"no_faktur_jual\",\r\n          text: \"No FJ\",\r\n          footerAttrs: {\r\n            colSpan: \"4\",\r\n          },\r\n          footer: (cell, row, num, index) => {\r\n            return <div>Total Barang : {this.props.LaporanDataPenjualan.length} </div>;\r\n          },\r\n        },\r\n        // {\r\n        //   dataField: \"kode_member\",\r\n        //   text: \"Kode Member\",\r\n        // },\r\n        {\r\n          dataField: \"nama_customer\",\r\n          text: \"Nama Member\",\r\n        },\r\n        {\r\n          dataField: \"kode_dept\",\r\n          text: \"Kode Jenis\",\r\n        },\r\n        // {\r\n        //   dataField: \"kode_barcode\",\r\n        //   text: \"Kode Barcode\",\r\n        // },\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n        },\r\n        {\r\n          dataField: \"berat\",\r\n          text: \"Berat\",\r\n          headerClasses: \"text-right\",\r\n          footer: (cell, row, num, index) => {\r\n            return (\r\n              <div className=\"text-right\">\r\n                {cell.reduce((a, b) => a + b, 0).toFixed(2)}\r\n              </div>\r\n            );\r\n          },\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\">{cell.toFixed(2)}</div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"ongkos\",\r\n          text: \"Ongkos\",\r\n          headerClasses: \"text-right\",\r\n          footer: (cell, row, num, index) => {\r\n            return (\r\n              <div className=\"text-right\">\r\n                {cell.reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}\r\n              </div>\r\n            );\r\n          },\r\n          formatter: (cell) => {\r\n            return (\r\n              <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"harga_jual\",\r\n          text: \"Harga Jual\",\r\n          headerClasses: \"text-right\",\r\n          footer: (cell, row, num, index) => {\r\n            return (\r\n              <div className=\"text-right\">\r\n                {cell.reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}\r\n              </div>\r\n            );\r\n          },\r\n          formatter: (cell, row) => {\r\n            return (\r\n              <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"harga_total\",\r\n          text: \"Harga Total\",\r\n          headerClasses: \"text-right\",\r\n          footer: (cell, row, num, index) => {\r\n            return (\r\n              <div className=\"text-right\">\r\n                {cell.reduce((a, b) => a + b, 0).toLocaleString(\"kr-KO\")}\r\n              </div>\r\n            );\r\n          },\r\n          formatter: (cell) => {\r\n            return (\r\n              <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"kode_marketplace\",\r\n          text: \"Marketplace\",\r\n        },\r\n      ]\r\n    };\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.change(\"type\", \"SEMUA\");\r\n    this.props.change(\"marketplace\", \"SEMUA\");\r\n    this.props.change(\"kode_group\", \"ALL\");\r\n    this.props.change(\"jenis_group\", \"ALL\");\r\n    this.props.dispatch(GetDataGroup());\r\n    this.props.dispatch(getDataMarketplace());\r\n\r\n  }\r\n\r\n  exportPdf() {\r\n    ExportTransaksiPenjualanMarketPlace(\r\n      this.props.LaporanDataPenjualan,\r\n      this.state.type_laporan\r\n    );\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  typeLaporan(e) {\r\n    if (e === \"SEMUA\") {\r\n      this.setState({\r\n        type_laporan: \"SEMUA\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        type_laporan: \"SELISIH\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let datagroup = [\r\n      {\r\n        value : \"ALL\",\r\n        name : \"SEMUA\"\r\n      }\r\n    ]\r\n    this.props.GetDataGroup.forEach(list => {\r\n      let row = {\r\n        name : list.kode_group,\r\n        value : list.kode_group,\r\n      }\r\n      datagroup.push(row) \r\n    });\r\n    let marketplace = [\r\n      {\r\n        value: \"SEMUA\",\r\n        name: \"SEMUA\",\r\n      },\r\n    ];\r\n    this.props.getDataMarketplace.forEach((list) => {\r\n      let data = {\r\n        value: list.kode_marketplace,\r\n        name: list.kode_marketplace + \" - \" + list.nama_marketplace,\r\n      };\r\n      marketplace.push(data);\r\n    });\r\n\r\n    \r\n    \r\n    const expandRow = {\r\n      renderer: (row) => (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              Berat Awal : {formatGram(row.berat_awal, 3)} <br />\r\n              Berat Selisih : {formatGram(row.berat_selisih, 3)} <br />\r\n              Nama Atribut : {row.nama_atribut} <br />\r\n              Berat Atribut : {row.berat_atribut} <br />\r\n              Harga Atribut : {row.harga_atribut.toLocaleString(\"kr-KO\")} <br />\r\n              Ongkos : {row.ongkos.toLocaleString(\"kr-KO\")} <br />\r\n              Harga/Gram : {row.harga_gram.toLocaleString(\"kr-KO\")} <br />\r\n              Nama Member : {row.nama_customer} <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n      showExpandColumn: true,\r\n      expandByColumnOnly: true,\r\n    };\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              id=\"marketplace\"\r\n              label=\"Marketplace\"\r\n              name=\"marketplace\"\r\n              options={marketplace}\r\n              placeholder={\"Silahkan Pilih Marketplace\"}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"kode_group\"\r\n              component={ReanderSelect}\r\n              options={datagroup}\r\n              onChange={(e)=>this.setState({kode_group : e})}\r\n              label=\"Kode Group\"\r\n              placeholder=\"Pilih Kode Group\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"jenis_group\"\r\n              component={ReanderSelect}\r\n              options={\r\n                [\r\n                  {\r\n                    value : \"ALL\",\r\n                    name : \"SEMUA\",\r\n                  },\r\n                  {\r\n                    value : \"MUDA\",\r\n                    name : \"MUDA\",\r\n                  },\r\n                  {\r\n                    value : \"TUA\",\r\n                    name : \"TUA\",\r\n                  }\r\n                ]\r\n              }\r\n              label=\"Jenis Group\"\r\n              placeholder=\"Pilih Jenis Group\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"form-group\">\r\n              <label>&nbsp;</label>\r\n              <br />\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.export ? this.props.LaporanDataPenjualan : []}\r\n              columns={this.state.columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Transaksi Penjualan Kosong\"\r\n              expandRow={expandRow}\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanPenjualanMarketPlaceExel\r\n                  data={this.props.LaporanDataPenjualan}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.isLoading ? (\r\n          <Loading\r\n            loading\r\n            background=\"rgba(0, 0, 0, 0.35)\"\r\n            loaderColor=\"rgba(94, 147, 117, 1)\"\r\n          />\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanPenjualanMkc = reduxForm({\r\n  form: \"HeadLaporanPenjualanMkc\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan,\r\n})(HeadLaporanPenjualanMkc);\r\nexport default connect((state) => {\r\n  return {\r\n    getDataMarketplace: state.datamaster.getDataMarketplace,\r\n    GetDataGroup: state.datamaster.GetDataGroup,\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadLaporanPenjualanMkc);\r\n"],"sourceRoot":""}