{"version":3,"sources":["pages/Hutang/ValidasiHutang/HeadValidasi.jsx","pages/Hutang/ValidasiHutang/FormValidasiHutang.jsx"],"names":["HeadValidasi","props","_this","Object","classCallCheck","this","_super","call","state","isLoading","DataValidasi","kode_sales","dispatch","getDataSales","getDetaValidasi","e","_this2","setState","getData","then","res","change","data","nama_sales","catch","err","ToastNotification","_this3","hasil","postData","hutang","length","getDataValidasiHutang","selectRow","mode","clickToSelect","selectColumnPosition","onSelect","row","isSelect","rowIndex","no_faktur_hutang","cek","JSON","parse","localStorage","getItem","findIndex","push","setItem","stringify","splice","onSelectAll","forEach","list","index","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","onKeyPress","key","preventDefault","className","tabel","keyField","columns","getValidasiHutang","empty","disabled","type","Fragment","isLoadingBatal","onClick","btnClear","Component","reduxForm","form","enableReinitialize","connect","DataSales","datamaster","FormValidasiHutang","dataField","text","formatter","cell","parseFloat","toLocaleString","bind","assertThisInitialized","datahutang","feedback","notahutang","jml_alamat","n_alamat_customer","concat","tgl_system","nama_customer","no_hp","slice","detail_barang","detail","nama_barang","kondisi","kategori","jumlah","berat","toFixed","bunga","jumlah_hutang","document","getElementById","value","join","setTimeout","element","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","removeItem","reset","_this4","react_router_dom","to","panel","style","display","id","rows","cols","ValidasiHutang_HeadValidasi","clearHutang","React"],"mappings":"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","file":"static/js/67.d6f6bb51.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\n// import { ReanderField, ReanderSelect } from \"../../../components/helpers/field\";\r\nimport { getDataSales } from \"../../../actions/datamaster_action\";\r\nimport { getData, postData } from \"../../../config/axios\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification\";\r\nimport Tabel from \"../../../components/helpers/tabel\";\r\nimport { getDataValidasiHutang } from \"../../../actions/hutang_action\";\r\n// import Loading from 'react-fullscreen-loading';\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    DataSales: state.datamaster.getDataSales,\r\n    getValidasiHutang: state.hutang.getDataValidasiHutang,\r\n  };\r\n};\r\nclass HeadValidasi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      DataValidasi: [],\r\n      kode_sales: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getDataSales());\r\n    this.getDetaValidasi()\r\n  }\r\n  getDataSales(e) {\r\n    this.setState({\r\n      kode_sales: e,\r\n    });\r\n    getData(\"sales/get/by-kode-sales/\")\r\n      .then((res) => {\r\n        this.props.change(\"nama_sales\", res.data.nama_sales);\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\"info\", \"Gagal Mengambil Data Keserver\");\r\n      });\r\n  }\r\n  getDetaValidasi() {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let hasil = {\r\n      kode_sales: \"all\",\r\n    };\r\n    if (hasil.kode_sales === false) {\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n      ToastNotification(\"info\", \"Kode Sales Harus Di pilih\");\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n      return false;\r\n    }\r\n    postData(\"validasi/get/hutang\", hasil)\r\n      .then((res) => {\r\n        //   console.log(res.data[0].hutang);\r\n        if (res.data[0].hutang.length === 0) {\r\n          ToastNotification(\"info\", \"Belum Ada Data Validasi\");\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n        } else {\r\n          ToastNotification(\"success\", \"Data Validasi Tersedia\");\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          this.props.dispatch(getDataValidasiHutang(res.data[0].hutang));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        ToastNotification(\"info\", \"Terjadi Kesalahan Saat Request\");\r\n        this.setState({\r\n          isLoading: false,\r\n          DataValidasi: [],\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const selectRow = {\r\n      mode: \"checkbox\",\r\n      clickToSelect: true,\r\n      selectColumnPosition: \"left\",\r\n      onSelect: (row, isSelect, rowIndex, e) => {\r\n        // console.log(isSelect);\r\n        if (isSelect === true) {\r\n          let hasil = {\r\n            no_faktur_hutang: row.no_faktur_hutang,\r\n          };\r\n          let cek = JSON.parse(localStorage.getItem(\"validas_hutang\")) || [];\r\n          let hasil_cek = cek.findIndex(\r\n            (hasil) => hasil.no_faktur_hutang === row.no_faktur_hutang\r\n          );\r\n          if (hasil_cek === -1) {\r\n            cek.push(hasil);\r\n            localStorage.setItem(\"validas_hutang\", JSON.stringify(cek));\r\n          }\r\n        } else {\r\n          // console.log();\r\n          if (localStorage.getItem(\"validas_hutang\") === null) {\r\n          } else {\r\n            let data = JSON.parse(localStorage.getItem(\"validas_hutang\"));\r\n            data.splice(row.no_faktur_hutang, 1);\r\n            localStorage.setItem(\"validas_hutang\", JSON.stringify(data));\r\n          }\r\n        }\r\n      },\r\n      onSelectAll: (isSelect, data, e) => {\r\n        data.forEach((list, index) => {\r\n          if (isSelect === true) {\r\n            let hasil = {\r\n              no_faktur_hutang: list.no_faktur_hutang,\r\n            };\r\n            let cek = JSON.parse(localStorage.getItem(\"validas_hutang\")) || [];\r\n            let hasil_cek = cek.findIndex(\r\n              (hasil) => hasil.no_faktur_hutang === list.no_faktur_hutang\r\n            );\r\n            if (hasil_cek === -1) {\r\n              cek.push(hasil);\r\n              localStorage.setItem(\"validas_hutang\", JSON.stringify(cek));\r\n            }\r\n          } else {\r\n            if (localStorage.getItem(\"validas_hutang\") === null) {\r\n            } else {\r\n              let data = JSON.parse(localStorage.getItem(\"validas_hutang\"));\r\n              data.splice(list.no_faktur_hutang, 1);\r\n              localStorage.setItem(\"validas_hutang\", JSON.stringify(data));\r\n            }\r\n          }\r\n        });\r\n      },\r\n    };\r\n    // const expandRow = {\r\n    //   showExpandColumn: true,\r\n    //   renderer: (row) => (\r\n    //     <div className=\"row container\">\r\n    //       <div className=\"col-6\">\r\n    //         Nama Customer : {row.nama_customer}\r\n    //         <br />\r\n    //         No Hp : {row.no_hp}\r\n    //         <br />\r\n    //         Alamat Customer : {row.alamat_customer}\r\n    //         <br />\r\n    //         Berat Emas : {row.berat_emas}\r\n    //         <br />\r\n    //         Berat Bruto : {row.berat_bruto}\r\n    //         <br />\r\n    //         Total Bayar : {row.total_bayar}\r\n    //         <br />\r\n    //       </div>\r\n    //       <div className=\"col-6\">\r\n    //         <table>\r\n    //           <thead>\r\n    //             <tr>\r\n    //               <td>Nama Barang</td>\r\n    //               <td>Kondisi</td>\r\n    //               <td>Kategori</td>\r\n    //               <td>Jumlah</td>\r\n    //               <td>Berat</td>\r\n    //             </tr>\r\n    //           </thead>\r\n    //           <tbody>\r\n    //             <>\r\n    //               {row.detail_barang.map((detail, index) => (\r\n    //                 <tr>\r\n    //                   <td> {detail.nama_barang} </td>\r\n    //                   <td> {detail.kondisi} </td>\r\n    //                   <td> {detail.kategori} </td>\r\n    //                   <td> {detail.jumlah} </td>\r\n    //                   <td> {detail.berat} </td>\r\n    //                 </tr>\r\n    //               ))}\r\n    //             </>\r\n    //           </tbody>\r\n    //         </table>\r\n    //       </div>\r\n    //     </div>\r\n    //   ),\r\n    // };\r\n    \r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\"\r\n      onKeyPress={(e) => {\r\n        e.key === \"Enter\" && e.preventDefault();\r\n      }}\r\n      >\r\n        <div className=\"row\">\r\n          {/* <div className=\"col-4\">\r\n            <Field\r\n              name=\"kode_sales\"\r\n              onChange={(e) => this.getDataSales(e)}\r\n              label=\"Pilih Kode Sales\"\r\n              placeholder=\"Masukan Kode Sales\"\r\n              options={this.props.DataSales.map((list) => {\r\n                let data = {\r\n                  value: list.kode_sales,\r\n                  name: list.nama_sales,\r\n                };\r\n                return data;\r\n              })}\r\n              component={ReanderSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <Field\r\n              name=\"nama_sales\"\r\n              component={ReanderField}\r\n              type=\"text\"\r\n              label=\"Nama Sales\"\r\n              placeholder=\"Masukan Nama Sales\"\r\n              readOnly={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label>&nbsp;</label>\r\n            <button\r\n              onClick={() => this.getDetaValidasi()}\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.state.isLoading}\r\n              type=\"button\"\r\n            >\r\n              {this.state.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Cari Data\r\n                </>\r\n              ) : (\r\n                \"Cari Data\"\r\n              )}\r\n            </button>\r\n          </div> */}\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              selectRow={selectRow}\r\n              //   expandRow={expandRow}\r\n              keyField=\"no_faktur_hutang\"\r\n              columns={this.props.columns}\r\n              data={this.props.getValidasiHutang || []}\r\n              empty={true}\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <button\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={this.props.isLoading}\r\n              type=\"submit\"\r\n            >\r\n              {this.props.isLoading ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Validasi\r\n                </>\r\n              ) : (\r\n                \"Validasi\"\r\n              )}\r\n            </button>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <button\r\n              className=\"btn btn-warning btn-block\"\r\n              disabled={this.props.isLoadingBatal}\r\n              onClick={this.props.btnClear}\r\n              type=\"button\"\r\n            >\r\n              {this.props.isLoadingBatal ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Batal\r\n                </>\r\n              ) : (\r\n                \"Batal\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {/* {this.props.isLoading || this.props.isLoadingBatal || this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadValidasi = reduxForm({\r\n  form: \"HeadValidasiHutang\",\r\n  enableReinitialize: true,\r\n})(HeadValidasi);\r\nexport default connect(maptostate)(HeadValidasi);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { reduxForm, reset } from \"redux-form\";\r\nimport { getDataValidasiHutang } from \"../../../actions/hutang_action.jsx\";\r\nimport { ToastNotification } from \"../../../components/helpers/notification.jsx\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport { postData } from \"../../../config/axios.jsx\";\r\nimport HeadValidasi from \"./HeadValidasi.jsx\";\r\n\r\nclass FormValidasiHutang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isLoadingBatal: false,\r\n      //   DataValidasi: [],\r\n      columns: [\r\n        {\r\n          dataField: \"no_faktur_hutang\",\r\n          text: \"No Faktur Hutang \",\r\n        },\r\n        // {\r\n        //   dataField: \"tgl_system\",\r\n        //   text: \"Tanggal System \",\r\n        // },\r\n        // {\r\n        //   dataField: \"tgl_lunas\",\r\n        //   text: \"Tgl Lunas \",\r\n        // },\r\n        // {\r\n        //   dataField: \"tgl_tempo\",\r\n        //   text: \"Tgl Jth Tempo \",\r\n        // },\r\n        {\r\n          dataField: \"nama_customer\",\r\n          text: \"Nama Customer \",\r\n        },\r\n        {\r\n          dataField: \"jumlah_hutang\",\r\n          text: \"Jumlah Hutang \",\r\n          formatter: (cell) => {\r\n            return <span>{parseFloat(cell).toLocaleString(\"kr-KO\")}</span>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"no_hp\",\r\n          text: \"No Hp \",\r\n        },\r\n        {\r\n          dataField: \"alamat_customer\",\r\n          text: \"Alamat \",\r\n        },\r\n\r\n        // {\r\n        //   dataField: \"lama_pinjam\",\r\n        //   text: \"Lama Pinjam \",\r\n        // },\r\n        // {\r\n        //   dataField: \"bunga\",\r\n        //   text: \"Bunga \",\r\n        // },\r\n        // {\r\n        //   dataField: \"total_hutang\",\r\n        //   text: \"Total Hutang \",\r\n        // },\r\n      ],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    if (\r\n      localStorage.getItem(\"validas_hutang\") === null ||\r\n      JSON.parse(localStorage.getItem(\"validas_hutang\")).length === 0\r\n    ) {\r\n      ToastNotification(\"info\", \"No Faktur Hutang Belum Dipilih\");\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n    } else {\r\n      let data_hutang = JSON.parse(\r\n        localStorage.getItem(\"validas_hutang\") || []\r\n      );\r\n      let hutang = {\r\n        hutang: data_hutang,\r\n      };\r\n      this.setState({\r\n        isLoading: true,\r\n      });\r\n      // console.log(hutang);\r\n      postData(\"validasi/simpan/hutang\", hutang)\r\n        .then((res) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\nlet datahutang = [];\r\nfor (let index = 0; index < 2; index++) {\r\nlet feedback = '';\r\nres.data.notahutang.forEach((row, index) => {\r\nlet jml_alamat = row.n_alamat_customer.length;\r\nfeedback += `========================================\\n`\r\nfeedback += `              NOTA HUTANG               \\n`\r\nfeedback += `========================================\r\nTanggal          : ${row.tgl_system}\r\nKode Sales       : ${row.kode_sales}\r\nNama Customer    : ${row.nama_customer}\r\nNo Hp            : ${row.no_hp}\r\nAlamat Customer  : ${row.n_alamat_customer.slice(0,20)}\r\nNo Faktur Hutang : ${row.no_faktur_hutang.toLocaleString(\"kr-KO\")}\r\n`\r\nif(jml_alamat>20){\r\nfeedback += `                   ${row.n_alamat_customer.slice(0,20)}\r\n`;\r\n}\r\nif(jml_alamat>40){\r\nfeedback += `                   ${row.n_alamat_customer.slice(40,20)}\r\n`;\r\n}\r\nfeedback += `========================================\\n`\r\nfeedback += `Keterangan\\n`\r\nfeedback += `========================================\\n`\r\nrow.detail_barang.forEach((detail, index) => {\r\nfeedback += `Nama Barang      : ${detail.nama_barang}\\n`\r\nfeedback += `Kondisi          : ${detail.kondisi}\\n`\r\nfeedback += `Kategori         : ${detail.kategori}\\n`\r\nfeedback += `Jumlah           : ${detail.jumlah}\\n`\r\nfeedback += `Berat            : ${detail.berat.toFixed(3)}\\n`\r\nfeedback += `========================================\\n`\r\n})\r\nfeedback += `Berat            : ${row.berat.toFixed(3)}\\n`\r\nfeedback += `Bunga            : ${row.bunga.toFixed(3)}\\n`\r\nfeedback += `Jumlah Hutang    : ${row.jumlah_hutang.toLocaleString(\"kr-KO\")}\\n`\r\nfeedback += `========================================\\n`\r\nfeedback += `                               TTD      \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                         (             )\\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\nfeedback += `                                        \\n`\r\n}\r\n)\r\n  datahutang.push(feedback);\r\n}          \r\n  \r\n    \r\n          document.getElementById(\"myInput\").value = datahutang.join('');\r\n          setTimeout(() => {\r\n            const element = document.createElement(\"a\");\r\n            const file = new Blob([document.getElementById(\"myInput\").value], {\r\n              type: \"text/plain;charset=utf-8\",\r\n            });\r\n            element.href = URL.createObjectURL(file);\r\n            element.download = \"autoprint_hutang.txt\";\r\n            document.body.appendChild(element);\r\n            element.click();\r\n          }, 300);\r\n          ToastNotification(\"success\", \"Hutang Berhasil Di Validasi\");\r\n          localStorage.removeItem(\"validas_hutang\");\r\n          this.props.dispatch(reset(\"HeadValidasiHutang\"));\r\n          this.props.dispatch(getDataValidasiHutang([]));\r\n        })\r\n        .catch((err) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          ToastNotification(\"info\", \"Gagal Mengambil Data Keserver\");\r\n        });\r\n    }\r\n    //   console.log();\r\n  }\r\n  clearHutang() {\r\n    this.setState({\r\n      isLoadingBatal: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isLoadingBatal: false,\r\n      });\r\n      localStorage.removeItem(\"validas_hutang\");\r\n      this.props.dispatch(reset(\"HeadValidasiHutang\"));\r\n      this.props.dispatch(getDataValidasiHutang([]));\r\n    }, 1000);\r\n  }\r\n//   Reprint(id) {\r\n//     let hasil = {\r\n//       hutang:\r\n//       [\r\n//         {\r\n//           no_faktur_hutang: \"dc35cabd-269e-4dfb-b761-384c871335dd\"\r\n//         },\r\n//         {\r\n//           no_faktur_hutang: \"543f65c0-66bf-4db2-98a9-13c081d2495e\"\r\n//         }\r\n//       ]\r\n//     }\r\n//     postData('validasi/simpan/hutang', hasil).then((res) => {\r\n//   console.log(res.data.notahutang);\r\n// let feedback = '';\r\n// res.data.notahutang.forEach((row, index) => {\r\n//   let jml_alamat = row.n_alamat_customer.length;\r\n// feedback += `========================================\r\n// Tanggal          : ${row.tgl_system}\r\n// Kode Sales       : ${row.kode_sales}\r\n// Nama Customer    : ${row.nama_customer}\r\n// No Hp            : ${row.no_hp}\r\n// Alamat Customer  : ${row.n_alamat_customer.split(0,20)}\r\n// No Faktur Hutang : ${row.no_faktur_hutang.toLocaleString(\"kr-KO\")}\r\n// `\r\n// if(jml_alamat>20){\r\n// feedback += `                   ${row.n_alamat_customer.split(0,20)}\r\n// `;\r\n// }\r\n// if(jml_alamat>40){\r\n// feedback += `                   ${row.n_alamat_customer.split(40,20)}\r\n// `;\r\n// }\r\n// feedback += `========================================\\n`\r\n// feedback += `Keterangan\\n`\r\n// feedback += `========================================\\n`\r\n// row.detail_barang.forEach((detail, index) => {\r\n// feedback += `Nama Barang      : ${detail.nama_barang}\\n`\r\n// feedback += `Kondisi          : ${detail.kondisi}\\n`\r\n// feedback += `Kategori         : ${detail.kategori}\\n`\r\n// feedback += `Jumlah           : ${detail.jumlah}\\n`\r\n// feedback += `Berat            : ${detail.berat.toFixed(3)}\\n`\r\n// feedback += `========================================\\n`\r\n// })\r\n// feedback += `Berat            : ${row.berat.toFixed(3)}\\n`\r\n// feedback += `Bunga            : ${row.bunga.toFixed(3)}\\n`\r\n// feedback += `Jumlah Hutang    : ${row.jumlah_hutang.toLocaleString(\"kr-KO\")}\\n`\r\n// feedback += `========================================\\n`\r\n// feedback += `\r\n\r\n\r\n\r\n\r\n\r\n\r\n// `\r\n// })\r\n    \r\n//           document.getElementById(\"myInput\").value = feedback;\r\n    \r\n//         }).then(() => {\r\n//           // console.log('masuk');\r\n//           // const element = document.createElement(\"a\");\r\n//           // const file = new Blob([document.getElementById(\"myInput\").value], {\r\n//           //   type: \"text/plain;charset=utf-8\",\r\n//           // });\r\n//           // element.href = URL.createObjectURL(file);\r\n//           // element.download = \"autoprint_service.txt\";\r\n//           // document.body.appendChild(element);\r\n//           // element.click();\r\n//         })\r\n          \r\n//           .catch((err) => {\r\n          \r\n//         })\r\n//       }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Kasir</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Validasi Hutang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Validasi Hutang </h1>\r\n        <Panel>\r\n        <textarea\r\n            style={{ display: \"none\" }}\r\n            id=\"myInput\"\r\n            rows=\"100\"\r\n            cols=\"100\"\r\n          />\r\n          <PanelHeader>Validasi Hutang</PanelHeader>\r\n          {/* <button onClick={()=>this.Reprint()}> PRINT </button> */}\r\n          <br />\r\n          {/* Validasi Hutang */}\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <HeadValidasi\r\n                  columns={this.state.columns}\r\n                  isLoading={this.state.isLoading}\r\n                  isLoadingBatal={this.state.isLoadingBatal}\r\n                  btnClear={()=>this.clearHutang()}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n              </div>\r\n              <div className=\"col-12\"></div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          {/* End Tambah Validasi Hutang  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormValidasiHutang = reduxForm({\r\n  form: \"FormValidasiHutang\",\r\n  enableReinitialize: true,\r\n})(FormValidasiHutang);\r\nexport default connect()(FormValidasiHutang);\r\n"],"sourceRoot":""}