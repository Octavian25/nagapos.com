{"version":3,"sources":["pages/Laporan/LaporanService/LaporanBatalService/exel/LaporanBatalServiceExel.jsx","pages/Laporan/LaporanService/LaporanBatalService/pdf/LaporanBatalServicePdf.jsx","pages/Laporan/LaporanService/LaporanBatalService/HeadFormBatalService.jsx","pages/Laporan/LaporanService/LaporanBatalService/FormLaporanBatalService.jsx"],"names":["LaporanBatalServiceExel","props","_this","Object","classCallCheck","this","_super","call","state","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","colSpan","textAlign","localStoragedecryp","length","JSON","parse","tgl_awal","tgl_akhir","getUserdata","nama_toko","alamat_toko","backgroundColor","color","data","map","row","index","key","no_faktur_service","tgl_system","nama_customer","alamat_customer","kode_sales","detail_barang","deskripsi","berat","toFixed","ongkos","toLocaleString","Component","LaporanBatalServicePdf","tableColumn","arguments","undefined","doc","jsPDF","tableRows","finalY","setFontSize","text","jml_alamat","slice","setProperties","title","concat","content","styles","halign","total","forEach","item","rows","parseInt","push","footer","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","save","HeadFormBatalService","date","Date","columns","dataField","footerAttrs","cell","num","dataservices","headerClasses","formatter","setStartDate","bind","assertThisInitialized","setLastDate","setState","_this2","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","htmlFor","onClick","exportPdf","exel_LaporanBatalServiceExel","reduxForm","form","enableReinitialize","connect","initialValues","getTglSystem","FormLaporanBatalService","data_post","formatDate","moment","format","postDataNoTImeOut","then","res","ToastNotification","localStorageencryp","stringify","catch","err","_this3","react_router_dom","to","panel","LaporanBatalService_HeadFormBatalService","React"],"mappings":"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","file":"static/js/102.543a4476.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport {\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\nclass LaporanBatalServiceExel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Batal Service\"\r\n          sheet=\"Laporan Batal Service\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"5\" style={{ textAlign: \"center\" }}>\r\n                {\" \"}\r\n                LAPORAN BATAL SERVICE{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"5\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"5\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"5\"> TOKO : {getUserdata().nama_toko} </th>\r\n            </tr>\r\n\r\n            <tr>\r\n              <th colSpan=\"5\"> ALAMAT : {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NO SERVICE\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                TGL TRANSAKSI\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                NAMA CUSTOME\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                ALAMAT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                SALES\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                DESKRIPSI\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                BERAT\r\n              </td>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                ONGKOS\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.data.map((row, index) => (\r\n              <>\r\n                <tr key={index}>\r\n                  <td>{row.no_faktur_service}</td>\r\n                  <td>{row.tgl_system}</td>\r\n                  <td>{row.nama_customer}</td>\r\n                  <td>{row.alamat_customer}</td>\r\n                  <td>{row.kode_sales}</td>\r\n                  <td>{row.detail_barang.deskripsi}</td>\r\n                  <td>{row.detail_barang.berat.toFixed(2)}</td>\r\n                  <td>{row.detail_barang.ongkos.toLocaleString(\"kr-KO\")}</td>\r\n                </tr>\r\n              </>\r\n            ))}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  backgroundColor: \"#E8E5E5\",\r\n                  color: \"#000\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                colSpan=\"8\"\r\n              >\r\n                Total Transaksi {this.props.data.length}\r\n              </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanBatalServiceExel;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst LaporanBatalServicePdf = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  // let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN SERVICE BATAL\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN SERVICE BATAL\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NO SERVICE`,\r\n      },\r\n      {\r\n        content: `TGL TRANSAKSI`,\r\n      },\r\n      {\r\n        content: `NAMA CUSTOMER`,\r\n      },\r\n      {\r\n        content: `SALES`,\r\n      },\r\n      {\r\n        content: `DESKRIPSI`,\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `QTY`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n      {\r\n        content: `ONGKOS`,\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  let total = 0;\r\n  data.forEach((item, index) => {\r\n    total = total + item.detail_barang.ongkos;\r\n    let rows = [\r\n      item.no_faktur_service,\r\n      item.tgl_system,\r\n      item.nama_customer,\r\n      item.alamat_customer,\r\n      item.kode_sales,\r\n      item.detail_barang.deskripsi,\r\n      {\r\n        content: item.detail_barang.berat.toFixed(3),\r\n        styles: {\r\n          halign: 'right',\r\n        },\r\n      },\r\n    \r\n      {\r\n        content: parseInt(item.detail_barang.ongkos).toLocaleString(\"kr-KO\"),\r\n        styles: {\r\n          halign : \"right\",\r\n        }\r\n      },\r\n      \r\n\r\n    ];\r\n    tableRows.push(rows)\r\n  })\r\n  \r\n  let footer = [\r\n    {\r\n      content: `Total Transaksi: ${data.length}`,\r\n      colSpan: 8,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: parseInt(total).toLocaleString(\"kr-KO\"),\r\n      styles: {\r\n        halign: \"right\",\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      }\r\n    },\r\n  ]\r\n  tableRows.push(footer)\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 7,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    // foot: tbl_barang,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n      textColor: \"#000\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  // footRows = [];\r\n  // tbl_barang = [];\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(\r\n  //   `User                          : ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  doc.save(`LAPORAN SERVICE BATAL.pdf`);\r\n  // var string = doc.output(\"datauristring\");\r\n  // // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  // var x = window.open();\r\n  // x.document.open();\r\n  // x.document.write(\r\n  //   \"<html><head><title>LAPORAN SERVICE BATAL</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n  //     string +\r\n  //     \"></embed></body></html>\"\r\n  // );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default LaporanBatalServicePdf;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\r\nimport LaporanBatalServicePdf from \"./pdf/LaporanBatalServicePdf\";\r\n// import Loading from 'react-fullscreen-loading';\r\n\r\nclass HeadFormBatalService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n      columns: [\r\n        {\r\n          dataField: \"no_faktur_service\",\r\n          text: \"No Service\",\r\n          footerAttrs: {\r\n            colSpan: \"8\",\r\n          },\r\n          footer: (cell, row, num, index) => {\r\n            return (\r\n              <div>\r\n                Total Transaksi : {this.props.dataservices.length}{\" \"}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"tgl_system\",\r\n          text: \"Tgl Transaksi\",\r\n        },\r\n        {\r\n          dataField: \"nama_customer\",\r\n          text: \"Nama Customer\",\r\n        },\r\n\r\n        {\r\n          dataField: \"alamat_customer\",\r\n          text: \"Alamat\",\r\n        },\r\n        {\r\n          dataField: \"kode_sales\",\r\n          text: \"Sales\",\r\n        },\r\n        {\r\n          dataField: \"detail_barang.deskripsi\",\r\n          text: \"Deskripsi\",\r\n        },\r\n        {\r\n          dataField: \"detail_barang.berat\",\r\n          text: \"Berat\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (cell) => {\r\n            return <div className=\"text-right\">{cell.toFixed(2)}</div>;\r\n          },\r\n        },\r\n        {\r\n          dataField: \"detail_barang.ongkos\",\r\n          text: \"Ongkos\",\r\n          headerClasses: \"text-right\",\r\n          formatter: (cell) => {\r\n            return (\r\n              <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    LaporanBatalServicePdf(this.props.dataservices)\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n        <div className=\"col-lg-4\">\r\n            <Field\r\n              id=\"tgl_awal\"\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n\r\n          \r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"no_hp\"\r\n              data={this.props.export ? this.props.dataservices : []}\r\n              columns={this.state.columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Batal Service Kosong\"\r\n            />\r\n          </div>\r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            <label htmlFor=\"\">&nbsp;</label>\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button type=\"button\" onClick={()=>this.exportPdf()} className=\"btn btn-warning btn-block\"> Export PDF </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanBatalServiceExel data={this.props.dataservices} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n         {/* {/* {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFormBatalService = reduxForm({\r\n  form: \"HeadFormBatalService\",\r\n  enableReinitialize: true,\r\n})(HeadFormBatalService);\r\n// export default connect()(HeadFormBatalService);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFormBatalService);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { formatDate, localStorageencryp } from \"../../../../components/helpers/function.jsx\";\r\nimport { ToastNotification } from \"../../../../components/helpers/notification.jsx\";\r\nimport { Panel, PanelHeader,PanelBody } from \"../../../../components/panel/panel.jsx\";\r\nimport { postDataNoTImeOut } from \"../../../../config/axios.jsx\";\r\nimport HeadFormBatalService from \"./HeadFormBatalService.jsx\";\r\nimport * as moment from \"moment-timezone\";\r\n\r\n// import HeadFormBatalBeli from \"./HeadFormBatalBeli.jsx\";\r\n// import HeadFormBatalService from \"./HeadFormBatalService.jsx\";\r\n\r\nclass FormLaporanBatalService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      export: false,\r\n      dataservices: [],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let data_post = {\r\n      tgl_awal: formatDate(\r\n        moment(new Date(data.tgl_awal)).format(\"YYYY-MM-DD\")\r\n      ),\r\n      tgl_akhir: formatDate(\r\n        moment(new Date(data.tgl_akhir)).format(\"YYYY-MM-DD\")\r\n      ),\r\n    };\r\n    postDataNoTImeOut(\"service/get/servicebatal\", data_post)\r\n      .then((res) => {\r\n        if (res.data.length === 0) {\r\n          ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\r\n          this.setState({\r\n            export: false,\r\n            isLoading: false,\r\n            dataservices: [],\r\n          });\r\n        } else {\r\n          ToastNotification(\"success\", \"Laporan Batal Service Tersedia\");\r\n          localStorageencryp(\"tgl_laporan\", JSON.stringify(data_post));\r\n          this.setState({\r\n            export: true,\r\n            isLoading: false,\r\n            dataservices: res.data,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          export: false,\r\n          isLoading: false,\r\n        });\r\n        ToastNotification(\"info\", \"Data Yang Anda Cari Tidak Ada\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Batal Services</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Batal Services </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Batal Services</PanelHeader>\r\n          <br />\r\n          {/* Laporan Batal Services */}\r\n          <PanelBody>\r\n\r\n                <HeadFormBatalService\r\n                  export={this.state.export}\r\n                  isLoading={this.state.isLoading}\r\n                  dataservices={this.state.dataservices}\r\n                  onSubmit={(data) => this.handleSubmit(data)}\r\n                />\r\n          </PanelBody>\r\n             \r\n          <br />\r\n          {/* End Tambah Laporan Batal Services  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormLaporanBatalService;\r\n"],"sourceRoot":""}