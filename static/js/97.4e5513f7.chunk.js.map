{"version":3,"sources":["pages/Laporan/LaporanPenjualan/LaporanPenjualanTukar/pdf/ExportPenjualanTukar.jsx","pages/Laporan/LaporanPenjualan/LaporanPenjualanTukar/exel/LaporanExelPenjualanTukar.jsx","pages/Laporan/LaporanPenjualan/LaporanPenjualanTukar/HeadFormLaporanPenjualanTukar.jsx"],"names":["ExportBatalPenjualan","tableColumn","data","arguments","length","undefined","doc","jsPDF","tableRows","footRows","finalY","total_baraang","total_qty","total_harga_gram","total_harga_beli","total_berat","setFontSize","text","getUserdata","nama_toko","jml_alamat","alamat_toko","slice","setProperties","title","concat","localStoragedecryp","JSON","parse","tgl_awal","tgl_akhir","content","styles","halign","forEach","item","index","header","no_faktur_group_user","colSpan","push","detail_barang","rows","nama_barang","parseInt","qty","pembulatan","harga_gram","toLocaleString","berat","toFixed","harga_beli","parseFloat","footer","fillColor","textColor","printed","user_id","getToday","fontStyle","autoTable","head","body","foot","startY","theme","rowPageBreak","margin","top","footStyles","fontSize","bodyStyles","headStyles","tableLineColor","tableLineWidth","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","string","output","x","window","open","document","write","LaporanExelPenjualanTukar","props","_this","Object","classCallCheck","this","_super","call","state","total_barang","barang","react_default","a","createElement","Fragment","react_html_table_to_excel_default","id","className","table","filename","sheet","buttonText","style","display","textAlign","backgroundColor","color","map","row","Component","HeadFormLaporanPenjualanTukar","date","Date","setStartDate","bind","assertThisInitialized","setLastDate","LaporanDataPenjualan","setState","_this2","databarang","element","detail","kadar","harga_nota","columns","dataField","footerAttrs","cell","num","headerClasses","formatter","onSubmit","handleSubmit","autoComplete","Field","name","component","InputDate","label","type","selected","onChange","placeholder","value","isLoading","tabel","keyField","export","empty","textEmpty","onClick","exportPdf","exel_LaporanExelPenjualanTukar","reduxForm","form","enableReinitialize","validate","ValidasiTanggalLaporan","connect","initialValues","getTglSystem"],"mappings":"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","file":"static/js/97.4e5513f7.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  getToday,\r\n  getUserdata,\r\n  localStoragedecryp,\r\n  pembulatan,\r\n} from \"../../../../../components/helpers/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst ExportBatalPenjualan = (\r\n  data = \"\",\r\n  username = \"\",\r\n  tanggal_dari = \"\",\r\n  tanggal_sampai = \"\"\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let tableColumn = [];\r\n  let finalY = 30;\r\n  let total_baraang = 0;\r\n  let total_qty = 0;\r\n  let total_harga_gram = 0;\r\n  let total_harga_beli = 0;\r\n  let total_berat = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN BARANG TUKAR\", 14, 15);\r\n  doc.setFontSize(20);\r\n  doc.text(getUserdata().nama_toko, 200, 15);\r\n  doc.setFontSize(8);\r\n  let jml_alamat = getUserdata().alamat_toko.length;\r\n  if (jml_alamat > 20) {\r\n    doc.text(getUserdata().alamat_toko.slice(0,48), 200, 20);\r\n  }\r\n  if (jml_alamat > 50) {\r\n    doc.text(getUserdata().alamat_toko.slice(48,90), 200, 25);\r\n  }\r\n  doc.setFontSize(10);\r\n  doc.setProperties({\r\n    title: \"LAPORAN BARANG TUKAR\",\r\n  });\r\n  //row 1\r\n  doc.text(\r\n    `PERIODE : ${\r\n      localStoragedecryp(\"tgl_laporan\").length === 0\r\n        ? null\r\n        : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n          \" s/d \" +\r\n          JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_akhir\r\n    }`,\r\n    14,\r\n    25\r\n  );\r\n  tableColumn = [\r\n    [\r\n      {\r\n        content: `NAMA BARANG`,\r\n      },\r\n      {\r\n        content: `QTY`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `HARGA/GRAM`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      {\r\n        content: `BERAT`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n      \r\n      {\r\n        content: `TOTAL HARGA`,\r\n        styles: {\r\n          halign: 'right'\r\n        },\r\n      },\r\n    ],\r\n  ];\r\n  data.forEach((item, index) => {\r\n    let tot_qty = 0;\r\n    let tot_berat = 0;\r\n    let tot_harga_beli = 0;\r\n    let tot_harga_gram = 0;\r\n    let header = [\r\n      {\r\n        content: `Nomor Faktur Group : ${\r\n          item.no_faktur_group_user\r\n        }`,\r\n        colSpan: 5,\r\n      },\r\n    ];\r\n    tableRows.push(header);\r\n    item.detail_barang.forEach((item, index) => {\r\n      let rows = [\r\n        item.nama_barang,\r\n        {\r\n          content: parseInt(item.qty),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        {\r\n          content:pembulatan(parseInt(item.harga_gram)).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        {\r\n          content: item.berat.toFixed(2),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n        \r\n        {\r\n          content:  parseInt(item.harga_beli).toLocaleString(\"kr-KO\"),\r\n          styles: {\r\n            halign: 'right',\r\n          },\r\n        },\r\n\r\n      ];\r\n      total_qty = parseFloat(total_qty) + parseFloat(item.qty);\r\n      total_harga_gram = total_harga_gram + parseInt(item.harga_gram);\r\n      total_berat = total_berat + parseFloat(item.berat);\r\n      total_harga_beli = total_harga_beli + parseInt(item.harga_beli);\r\n\r\n      tot_qty = tot_qty + parseFloat(item.qty);\r\n      tot_harga_gram = tot_harga_gram + parseInt(item.harga_gram);\r\n      tot_berat = tot_berat + parseFloat(item.berat);\r\n      tot_harga_beli = tot_harga_beli + parseInt(item.harga_beli);\r\n\r\n      tableRows.push(rows);\r\n    });\r\n\r\n    total_baraang = total_baraang + item.detail_barang.length;\r\n    // localStorage.setItem('hasil',JSON.stringify(item.detail.length))\r\n    // console.log();\r\n    // let total = [\r\n    //   {\r\n    //     content: `Sub Total : ${item.detail_barang.length}`,\r\n    //     colSpan: 1,\r\n    //     styles: {\r\n    //       halign: 'center',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${tot_qty}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${parseInt(tot_harga_gram).toLocaleString(\"kr-KO\")}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     content: `${formatGram(tot_berat,3)}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n     \r\n    //   {\r\n    //     content: `${parseInt(tot_harga_beli).toLocaleString(\"kr-KO\")}`,\r\n    //     styles: {\r\n    //       halign: 'right',\r\n    //       fillColor: \"#E8E5E5\",\r\n    //       textColor: \"#000\",\r\n    //     },\r\n    //   },\r\n    // ];\r\n    // tableRows.push(total);\r\n\r\n  });\r\n  let footer = [\r\n    {\r\n      content: `Grand Total Barang : ${total_baraang}`,\r\n      colSpan: 1,\r\n      styles: {\r\n        halign: 'center',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_qty}`,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${pembulatan(parseInt(total_harga_gram)).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n    {\r\n      content: `${total_berat.toFixed(2)}`,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n   \r\n    {\r\n      content: `${parseInt(total_harga_beli).toLocaleString(\"kr-KO\")}`,\r\n      styles: {\r\n        halign: 'right',\r\n        fillColor: \"#E8E5E5\",\r\n        textColor: \"#000\",\r\n      },\r\n    },\r\n  ];\r\n  tableRows.push(footer);\r\n\r\n  let printed = [\r\n    {\r\n      content: `Printed By ${JSON.parse(localStoragedecryp(\"userdata\")).user_id} / ${getToday()}`,\r\n      colSpan: 11,\r\n      styles: {\r\n        // lineWidth: 0.1,\r\n        fontStyle: \"italic\",\r\n        textColor: \"#000\",\r\n        // fillColor: \"#E8E5E5\"\r\n      },\r\n    },\r\n  ]\r\n  tableRows.push(printed);\r\n\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: finalY,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    // pageBreak: \"avoid\",\r\n    margin: { top: 10 },\r\n    footStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    bodyStyles: {\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      fontSize: 8,\r\n    },\r\n    headStyles: {\r\n      fontSize: 8,\r\n      // lineWidth: 0.02,\r\n      // lineColor: \"#000\",\r\n      textColor: \"#000\",\r\n      fillColor: \"#E8E5E5\",\r\n    },\r\n    tableLineColor: [255, 255, 255],\r\n    tableLineWidth: 1,\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 3;\r\n  tableRows = [];\r\n  footRows = [];\r\n  // total_baraang = 0;\r\n  // tot_berat = 0;\r\n  // tot_onkos = 0;\r\n  // tot_harga_jual = 0;\r\n  // tot_harga_gram = 0;\r\n  // tot_berat_atribut = 0;\r\n  // tot_harga_atribut = 0;\r\n  // tot_harga_total = 0;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  // doc.text(\r\n  //   `User                           :  ${\r\n  //     JSON.parse(localStoragedecryp(\"userdata\")).user_id\r\n  //   }`,\r\n  //   14,\r\n  //   finalY + 10\r\n  // );\r\n  // doc.text(`Cetak                        : ${getToday()}`, 14, finalY + 16);\r\n  // doc.text(`Total Barang Yang Di batal : ${total_baraang}`, 14, finalY + 20);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  // doc.autoPrint();\r\n  // doc.save(`LAPORAN BATAL PENJUALAN.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  // var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(\r\n    \"<html><head><title>LAPORAN BARANG TUKAR</title></head><body style='margin:0 !important'><embed width='100%' height='100%'  src=\" +\r\n      string +\r\n      \"></embed></body></html>\"\r\n  );\r\n  // x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default ExportBatalPenjualan;\r\n","import React, { Component } from \"react\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport { getUserdata, localStoragedecryp, pembulatan } from \"../../../../../components/helpers/function\";\r\nclass LaporanExelPenjualanTukar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let qty = 0;\r\n    let berat = 0;\r\n    let harga_beli = 0;\r\n    let harga_gram = 0;\r\n    let total_barang = 0;\r\n    this.props.data.forEach((barang, index) => {\r\n      barang.detail_barang.forEach((item, index) => {\r\n        qty = qty + item.qty;\r\n        berat = berat + item.berat;\r\n        harga_beli = harga_beli + item.harga_beli;\r\n        harga_gram = harga_gram + item.harga_gram\r\n      });\r\n      total_barang = total_barang + barang.detail_barang.length;\r\n    });\r\n    return (\r\n      <>\r\n        <ReactHTMLTableToExcel\r\n          id=\"test-table-xls-button\"\r\n          className=\"btn btn-success btn-block\"\r\n          table=\"table-to-xls\"\r\n          filename=\"Laporan Barang Tukar\"\r\n          sheet=\"Laporan Barang Tukar\"\r\n          buttonText=\"Export Exel\"\r\n        />\r\n        <table id=\"table-to-xls\" style={{ display: \"none\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"5\" style={{ textAlign: \"center\" }}>\r\n                {\" \"}\r\n                LAPORAN BARANG TUKAR{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"5\"> Periode </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"5\">\r\n                {\" \"}\r\n                {localStoragedecryp(\"tgl_laporan\").length === 0\r\n                  ? null\r\n                  : JSON.parse(localStoragedecryp(\"tgl_laporan\")).tgl_awal +\r\n                    \" s/d \" +\r\n                    JSON.parse(localStoragedecryp(\"tgl_laporan\"))\r\n                      .tgl_akhir}{\" \"}\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th colSpan=\"5\"> TOKO :  {getUserdata().nama_toko} </th>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <th colSpan=\"5\"> ALAMAT :  {getUserdata().alamat_toko} </th>\r\n            </tr>\r\n            <tr></tr>\r\n            <tr>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    NAMA BARANG\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    QTY\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    HARGA/GRAM\r\n              </td>\r\n              <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\" }}>\r\n                    BERAT\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\" }}>\r\n                    TOTAL HARGA\r\n                  </td>\r\n                </tr>\r\n          </thead>\r\n          {this.props.data.map((item, index) => (\r\n            <>\r\n              <tbody>\r\n                {item.detail_barang.map((row, index) => (\r\n                  <tr>\r\n                    <td>\r\n                      {row.nama_barang}\r\n                    </td>\r\n                    <td>\r\n                      {row.qty}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      {pembulatan(row.harga_gram).toLocaleString(\"kr-KO\")}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      {row.berat.toFixed(2)}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\"}}>\r\n                      {row.harga_beli.toLocaleString(\"kr-KO\")}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n             \r\n            </>\r\n          ))}\r\n          <tfoot>\r\n          <tr>\r\n                  <td colSpan=\"1\" style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",  textAlign: \"center\" }}>\r\n                    Grand Total Barang : {total_barang}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\"  }}>\r\n                    {\" \"}\r\n                    {qty}{\" \"}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\",textAlign: \"right\"   }}>\r\n                    {\" \"}\r\n                    {pembulatan(harga_gram).toLocaleString(\"kr-KO\")}{\" \"}\r\n                  </td>\r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\"  }}>\r\n                    {\" \"}\r\n                    {berat.toFixed(2)}{\" \"}\r\n                  </td>\r\n                \r\n                  <td style={{ backgroundColor: \"#E8E5E5\", color: \"#000\", textAlign: \"right\"  }}>\r\n                    {\" \"}\r\n                    {harga_beli.toLocaleString(\"kr-KO\")}{\" \"}\r\n                  </td>\r\n            </tr>\r\n            </tfoot>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default LaporanExelPenjualanTukar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { InputDate } from \"../../../../components/helpers/field\";\r\nimport { getTglSystem, pembulatan } from \"../../../../components/helpers/function\";\r\nimport Tabel from \"../../../../components/helpers/tabel\";\r\nimport ValidasiTanggalLaporan from \"../../../../Validasi/ValidasiTanggalLaporan\";\r\n// import LaporanBatalServiceExel from \"./exel/LaporanBatalServiceExel\";\r\nimport ExportBatalPenjualan from \"./pdf/ExportPenjualanTukar\";\r\n// import Loading from 'react-fullscreen-loading';\r\nimport LaporanExelPenjualanTukar from \"./exel/LaporanExelPenjualanTukar\";\r\n\r\nclass HeadFormLaporanPenjualanTukar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: new Date(),\r\n    };\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setStartDate = this.setStartDate.bind(this);\r\n    this.setLastDate = this.setLastDate.bind(this);\r\n  }\r\n\r\n  exportPdf() {\r\n    ExportBatalPenjualan(this.props.LaporanDataPenjualan);\r\n  }\r\n  setStartDate(date) {\r\n    this.setState({\r\n      tgl_awal: new Date(date),\r\n    });\r\n  }\r\n  setLastDate(date) {\r\n    this.setState({\r\n      tgl_akhir: new Date(date),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let databarang = [];\r\n    let qty = 0;\r\n    let kadar = 0;\r\n    let berat = 0;\r\n    let harga_nota = 0;\r\n    let harga_beli = 0;\r\n    let harga_gram = 0;\r\n    this.props.LaporanDataPenjualan.forEach((element) => {\r\n      element.detail_barang.forEach((detail) => {\r\n        databarang.push(detail);\r\n        qty = qty + detail.qty\r\n        kadar = kadar + detail.kadar\r\n        berat = berat + detail.berat\r\n        harga_nota = harga_nota + detail.harga_nota\r\n        harga_beli = harga_beli + detail.harga_beli\r\n        harga_gram = harga_gram + detail.harga_gram\r\n      });\r\n    });\r\n    const columns = [\r\n      // {\r\n      //   dataField: \"kode_dept\",\r\n      //   text: \"Jenis\",\r\n      //   footer: '',\r\n      // },\r\n      {\r\n        dataField: \"nama_barang\",\r\n        text: \"Nama Barang\",\r\n        footerAttrs: {\r\n          colSpan: \"1\",\r\n        },\r\n        footer: (cell, row, num, index) => {\r\n          return <div>Total Barang  : {databarang.length} </div>;\r\n        },\r\n      },\r\n     \r\n      {\r\n        dataField: \"qty\",\r\n        text: \"Qty\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{qty} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell}</div>;\r\n        },\r\n      },\r\n\r\n      {\r\n        dataField: \"harga_gram\",\r\n        text: \"Harga/Gram\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{pembulatan(harga_gram).toLocaleString(\"kr-KO\")} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{pembulatan(cell).toLocaleString(\"kr-KO\")}</div>;\r\n        },\r\n      },\r\n     \r\n      {\r\n        dataField: \"berat\",\r\n        text: \"Berat\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{berat.toFixed(2)} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toFixed(2)}</div>;\r\n        },\r\n      },\r\n      {\r\n        dataField: \"harga_beli\",\r\n        text: \"Total Harga\",\r\n        headerClasses: 'text-right',\r\n        footer: (cell, row, num, index) => {\r\n          return <div className=\"text-right\">{harga_beli.toLocaleString(\"kr-KO\")} </div>;\r\n        },\r\n        formatter: (cell) => {\r\n          return <div className=\"text-right\">{cell.toLocaleString(\"kr-KO\")}</div>;\r\n        },\r\n      }\r\n    ];\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_awal\"\r\n              component={InputDate}\r\n              label=\"Tanggal Dari\"\r\n              type=\"text\"\r\n              selected={this.state.tgl_awal}\r\n              onChange={(date) => this.setStartDate(date)}\r\n              placeholder=\"Masukan Tanggal Dari\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tgl_akhir\"\r\n              component={InputDate}\r\n              type=\"text\"\r\n              selected={this.state.tgl_akhir}\r\n              onChange={(date) => this.setLastDate(date)}\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Tanggal Akhir\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"text-right\">\r\n              <label>&nbsp;</label>\r\n              <button\r\n                type=\"submit\"\r\n                value=\"PDF\"\r\n                name=\"type_btn\"\r\n                className=\"btn btn-primary btn-block\"\r\n              >\r\n                {this.props.isLoading ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Mencari\r\n                  </>\r\n                ) : (\r\n                  \"Cari Laporan\"\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.export ? databarang  :  []}\r\n              columns={columns}\r\n              empty={true}\r\n              textEmpty=\"Data Laporan Batal Penjualan Kosong\"\r\n            />\r\n          </div>\r\n          \r\n          <div className={this.props.export ? \"col-lg-12\" : \"col-lg-12 d-none\"}>\r\n            {/* <label htmlFor=\"\">&nbsp;</label> */}\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.exportPdf()}\r\n                  className=\"btn btn-warning btn-block\"\r\n                >\r\n                  {\" \"}\r\n                  Export PDF{\" \"}\r\n                </button>\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <LaporanExelPenjualanTukar data={this.props.LaporanDataPenjualan} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n         {/* {/* {this.state.isLoading ? (\r\n        <Loading \r\n        loading\r\n        background=\"rgba(0, 0, 0, 0.35)\"\r\n         loaderColor=\"rgba(94, 147, 117, 1)\" />\r\n      ) : null} */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadFormLaporanPenjualanTukar = reduxForm({\r\n  form: \"HeadFormLaporanPenjualanTukar\",\r\n    enableReinitialize: true,\r\n  validate: ValidasiTanggalLaporan \r\n})(HeadFormLaporanPenjualanTukar);\r\nexport default connect((state) => {\r\n  return {\r\n    initialValues: {\r\n      tgl_awal: getTglSystem(),\r\n      tgl_akhir: getTglSystem(),\r\n    },\r\n  };\r\n})(HeadFormLaporanPenjualanTukar);\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { Field, reduxForm } from \"redux-form\";\r\n// import { ReanderField } from \"../../../../components/helpers/field\";\r\n// import { getToday } from \"../../../../components/helpers/function\";\r\n// import ValidasiLaporanPenjualanSales from \"../../../../Validasi/Penjualan/ValidasiLaporanPenjualanSales\";\r\n\r\n// class HeadFormLaporanPenjualanTukar extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       date: new Date(),\r\n//     };\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <form onSubmit={this.props.handleSubmit} autoComplete=\"off\">\r\n//         <div className=\"row\">\r\n//           <div className=\"col-lg-4\">\r\n//             <Field\r\n//               name=\"tanggal_awal\"\r\n//               component={ReanderField}\r\n//               type=\"date\"\r\n//               label=\"Dari Tanggal\"\r\n//               placeholder=\"Masukan Tanggal Awal\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"col-lg-4\">\r\n//             <Field\r\n//               name=\"sampai_tgl\"\r\n//               component={ReanderField}\r\n//               type=\"date\"\r\n//               label=\"Sampai Tanggal\"\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"col-lg-4\">\r\n//             <div className=\"text-right\">\r\n//               <label>&nbsp;</label>\r\n//               <button\r\n//                 type=\"submit\"\r\n//                 value=\"PDF\"\r\n//                 name=\"type_btn\"\r\n//                 className=\"btn btn-primary btn-block\"\r\n//                 disabled={this.props.isLoading}\r\n//               >\r\n//                 {this.props.isLoading ? (\r\n//                   <>\r\n//                     <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n//                     Mencari\r\n//                   </>\r\n//                 ) : (\r\n//                   \"Cari Laporan\"\r\n//                 )}\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// HeadFormLaporanPenjualanTukar = reduxForm({\r\n//   form: \"HeadFormLaporanPenjualanTukar\",\r\n//   enableReinitialize: true,\r\n//   validate: ValidasiLaporanPenjualanSales,\r\n// })(HeadFormLaporanPenjualanTukar);\r\n// // export default connect(null)(HeadFormLaporanPenjualanTukar);\r\n\r\n// export default connect((state) => {\r\n//   return {\r\n//     initialValues: {\r\n//       tanggal_awal : getToday(),\r\n//       sampai_tgl : getToday(),\r\n//     },\r\n//   };\r\n// })(HeadFormLaporanPenjualanTukar);\r\n"],"sourceRoot":""}